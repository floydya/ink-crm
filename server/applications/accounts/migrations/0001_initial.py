# Generated by Django 3.0.3 on 2020-02-28 12:16

import applications.accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djmoney.models.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=144, verbose_name='First name')),
                ('middle_name', models.CharField(blank=True, max_length=144, verbose_name='Middle name')),
                ('last_name', models.CharField(blank=True, max_length=144, verbose_name='Last name')),
                ('banned', models.BooleanField(default=False, verbose_name='Заблокирован')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone number')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users/avatars', verbose_name='Avatar')),
            ],
            options={
                'verbose_name': 'employee',
                'verbose_name_plural': 'Employees',
            },
            managers=[
                ('objects', applications.accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bounty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('month', models.PositiveSmallIntegerField(default=applications.accounts.models.current_month, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Month')),
                ('year', models.PositiveSmallIntegerField(default=applications.accounts.models.current_year, verbose_name='Year')),
                ('amount_currency', djmoney.models.fields.CurrencyField(choices=[('UAH', 'UAH ₴')], default='UAH', editable=False, max_length=3)),
                ('amount', djmoney.models.fields.MoneyField(decimal_places=2, max_digits=14, verbose_name='Amount')),
                ('note', models.TextField(blank=True, verbose_name='Note')),
                ('href', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('status', models.NullBooleanField(choices=[(None, 'Pending'), (True, 'Payed'), (False, 'Canceled')], default=None, verbose_name='Status')),
                ('status_changed_at', models.DateTimeField(auto_now=True, verbose_name='Status changed at')),
                ('status_change_reason', models.TextField(blank=True, default='', verbose_name='Status change reason')),
            ],
            options={
                'verbose_name': 'bounty',
                'verbose_name_plural': 'bounties',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Fine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('month', models.PositiveSmallIntegerField(default=applications.accounts.models.current_month, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Month')),
                ('year', models.PositiveSmallIntegerField(default=applications.accounts.models.current_year, verbose_name='Year')),
                ('amount_currency', djmoney.models.fields.CurrencyField(choices=[('UAH', 'UAH ₴')], default='UAH', editable=False, max_length=3)),
                ('amount', djmoney.models.fields.MoneyField(decimal_places=2, max_digits=14, verbose_name='Amount')),
                ('note', models.TextField(blank=True, verbose_name='Note')),
                ('href', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('status', models.NullBooleanField(choices=[(None, 'Pending'), (True, 'Payed'), (False, 'Canceled')], default=None, verbose_name='Status')),
                ('status_changed_at', models.DateTimeField(auto_now=True, verbose_name='Status changed at')),
                ('status_change_reason', models.TextField(blank=True, default='', verbose_name='Status change reason')),
            ],
            options={
                'verbose_name': 'fine',
                'verbose_name_plural': 'fines',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('director', 'Director'), ('administrator', 'Administrator'), ('master', 'Master')], max_length=32, null=True, verbose_name='Role')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Weekend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('date', models.DateField(verbose_name='Date')),
                ('from_time', models.TimeField(verbose_name='From')),
                ('to_time', models.TimeField(verbose_name='To')),
                ('created_by', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekends', to='accounts.Profile', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'weekend',
                'verbose_name_plural': 'weekends',
            },
        ),
    ]
