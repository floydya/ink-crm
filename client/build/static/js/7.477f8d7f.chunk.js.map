{"version":3,"sources":["pages/Home/components/shared.js","shared/components/NoResults/NoResultsSVG.jsx","shared/components/NoResults/index.jsx","shared/utils/string.js","pages/Profile/Styles.js","pages/Profile/Modals/Styles.js","shared/constants/dates.js","pages/Profile/Modals/CreateBounty.jsx","pages/Profile/Modals/CreateFine.jsx","pages/Profile/History/UnpayedPayments.jsx","shared/utils/moneyFormat.js","components/Payment/Styles.js","shared/constants/paymentStatuses.js","components/Payment/index.jsx","pages/Profile/History/Transactions.jsx","pages/Profile/History/index.jsx","shared/constants/roles.js","pages/Profile/CreateProfile.jsx","pages/Profile/index.jsx"],"names":["useModalStateHelper","useState","modalShow","setModalShow","useMemo","open","close","isOpen","homeCardsColumns","Header","accessor","width","className","Cell","row","original","created_at","created_by","full_name","formatDateTime","cell","value","name","redirectUrl","useCallback","window","disabled","variant","icon","onClick","NoResults","height","viewBox","version","xmlns","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","opacity","d","style","mixBlendMode","NoResultsContainer","styled","div","NoResultsTitle","font","medium","size","NoResultsTip","title","tip","NoResultsSVG","capitalize","s","charAt","toUpperCase","slice","Container","color","textDarkest","Card","InfoCard","ProfileAvatar","Avatar","ProfileName","span","ProfileRole","mixin","tag","CreateContainer","Row","Info","InfoHeader","h4","InfoBody","h5","TableWrapper","ModalContainer","months","label","years","BountyModal","modalClose","employee","useApi","get","mountFetch","data","post","isCreating","createBounty","bountyTypes","map","el","Form","enableReinitialize","initialValues","month","moment","year","type","amount","note","href","validations","is","required","onSubmit","values","form","a","toast","success","pubsub","emit","handleAPIError","Field","Select","options","Input","Textarea","FineModal","createFine","fineTypes","PaymentEntity","entity","URL","__type","prevUpdating","useRef","patch","isUpdating","updateEntity","useEffect","current","backgroundColor","colSpan","target","rel","display","gridTemplateColumns","gap","margin","alignItems","cursor","status","status_change_reason","prompt","UnpayedPayments","employee_id","bounties","fetchBounties","fines","fetchFines","_b","_f","sort","b","diff","fetchAll","on","off","cellPadding","cellSpacing","length","payment","key","formatMoney","parseFloat","toFixed","PaymentStatus","Payment","padding","find","gridColumn","status_changed_at","status_changed_by","TransactionEntity","transaction","transactionModalAvailable","includes","entity__type","modalHelper","entity_type","entity_id","withCloseIcon","testid","onClose","renderContent","entity_object","Transactions","groupedTransactions","Object","entries","date","_transactions","reduce","acc","next","History","bountyModalHelper","fineModalHelper","formatDateTimeForAPI","startOf","_from","_setFrom","endOf","_to","_setTo","prevData","created_at_after","created_at_before","purpose_id","limit","isLoading","fetchTransactions","transactions","setTransactions","lodash","groupBy","format","nextQueryParams","qs","parseUrl","query","fetchMore","container","document","getElementById","innerHeight","scrollTop","scrollHeight","newFetch","addEventListener","removeEventListener","results","prev","hasLabel","htmlFor","DatePicker","onChange","withTime","justifyContent","roles","CreateProfile","fetchEmployee","user","parlor","createProfile","role","isWorking","Profile","employeeId","useParams","useContext","AuthenticationContext","error","profile","p","Breadcrumbs","items","link","to","last_name","role_display","birth_date","phone_number","date_joined","last_login"],"mappings":"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","file":"static/js/7.477f8d7f.chunk.js","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\"\nimport Button from \"../../../shared/components/Button\"\nimport { formatDateTime } from \"../../../shared/utils/dateTime\"\n\nexport const ButtonCell = ({ cell: { value } }) => {\n  const redirectUrl = useCallback(() => window.open(value), [value])\n  return <Button\n    disabled={!value}\n    variant=\"secondary\"\n    icon=\"link\"\n    onClick={redirectUrl}\n  >\n    Перейти\n  </Button>\n}\n\nexport const CreatedCell = ({row: {original: {created_at, created_by}}}) => {\n  return <div>\n    <p>{created_by.full_name}</p>\n    <p>{formatDateTime(created_at, \"DD.MM.YYYY HH:mm:ss\")}</p>\n  </div>\n}\n\nexport const useModalStateHelper = () => {\n  const [modalShow, setModalShow] = useState(false)\n  return useMemo(() => ({\n    open: () => setModalShow(true),\n    close: () => setModalShow(false),\n    isOpen: () => modalShow === true\n  }), [modalShow])\n}\n\nexport const homeCardsColumns = [\n  {\n    Header: \"ID\",\n    accessor: \"id\",\n    width: 50,\n    className: \"text-center\",\n  },\n  {\n    Header: \"Создание\",\n    accessor: \"created_at\",\n    Cell: CreatedCell,\n    width: 200,\n  },\n  {\n    Header: \"Тип\",\n    accessor: \"type\",\n    Cell: ({ cell }) => cell.value.name,\n    width: 200,\n  },\n  {\n    Header: \"Заметка\",\n    accessor: \"note\",\n  },\n  {\n    Header: \"Сумма\",\n    accessor: \"amount\",\n    className: \"text-right\",\n  },\n  {\n    Header: \"Ссылка\",\n    accessor: \"href\",\n    Cell: ButtonCell,\n    className: \"text-center\",\n  }\n]","import React from 'react';\n\nconst NoResults = () => (\n  <svg\n    width=\"160px\"\n    height=\"146px\"\n    viewBox=\"0 0 160 146\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <defs>\n      <linearGradient\n        x1=\"14.2197515%\"\n        y1=\"85.3653884%\"\n        x2=\"85.2573455%\"\n        y2=\"14.6507444%\"\n        id=\"linearGradient-1\"\n      >\n        <stop stopColor=\"#C1C7D0\" offset=\"56%\" />\n        <stop stopColor=\"#E9EBEF\" stopOpacity=\"0.5\" offset=\"97%\" />\n      </linearGradient>\n    </defs>\n    <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g transform=\"translate(-300.000000, -352.000000)\" fillRule=\"nonzero\">\n        <g id=\"No-Results\" transform=\"translate(300.000000, 352.000000)\">\n          <g id=\"Group\" opacity=\"0.3\" transform=\"translate(8.421053, 5.350785)\" fill=\"#B3BAC5\">\n            <path\n              d=\"M72.9416268,140.511623 C72.2271132,140.511623 71.5151515,140.526911 70.8057416,140.557487 C69.8121576,140.578595 68.9895612,139.79146 68.9684211,138.799372 C68.947281,137.807283 69.7356026,136.985925 70.7291866,136.964817 L70.7827751,136.964817 C75.3473393,136.941769 79.8977162,136.455146 84.3636364,135.512461 C85.3360803,135.301378 86.2957762,135.917397 86.507177,136.888377 C86.7185779,137.859357 86.1016306,138.817608 85.1291866,139.028691 C81.1172563,139.873967 77.0394498,140.370138 72.9416268,140.511623 Z M61.0679426,139.884817 C60.9635073,139.893719 60.8585022,139.893719 60.754067,139.884817 C55.9858358,139.22527 51.2987018,138.075102 46.7674641,136.45267 C46.161651,136.235561 45.7178575,135.712233 45.6032563,135.079819 C45.4886551,134.447405 45.7206569,133.801983 46.2118688,133.386678 C46.7030807,132.971372 47.3788759,132.849278 47.984689,133.066387 C52.2799672,134.607845 56.7233769,135.701656 61.2440191,136.330366 C62.1763788,136.450209 62.8591494,137.266592 62.8110048,138.203999 C62.7628602,139.141405 62.0000335,139.883767 61.0602871,139.907749 L61.0679426,139.884817 Z M94.2239234,136.315079 C93.3343753,136.355899 92.5487632,135.740786 92.3763355,134.868467 C92.2039078,133.996149 92.6965525,133.129128 93.5349282,132.829424 C97.81401,131.249665 101.918631,129.233743 105.783732,126.813613 C106.330742,126.472246 107.018591,126.448198 107.588173,126.750525 C108.157755,127.052853 108.522538,127.635627 108.545111,128.279321 C108.567683,128.923016 108.244617,129.529838 107.697608,129.871204 C103.622159,132.42303 99.294394,134.549075 94.7827751,136.215707 C94.6041413,136.285729 94.4155129,136.32701 94.2239234,136.33801 L94.2239234,136.315079 Z M38.461244,132.577173 C38.1472102,132.588681 37.8356695,132.517504 37.5578947,132.370785 C33.3113613,130.114297 29.3071112,127.430032 25.6076555,124.359895 C24.8423844,123.726647 24.7361323,122.593857 25.3703349,121.829738 C26.0045375,121.065619 27.1390351,120.959527 27.9043062,121.592775 C31.4168802,124.502776 35.218505,127.046185 39.2497608,129.183246 C39.9718547,129.560888 40.3494187,130.37612 40.1699289,131.170063 C39.9904392,131.964006 39.2987541,132.538235 38.4842105,132.569529 L38.461244,132.577173 Z M19.7435407,118.015393 C19.2124054,118.035471 18.6995628,117.820009 18.3425837,117.426806 C15.118302,113.86169 12.2683329,109.976096 9.83732057,105.83089 C9.51184991,105.276511 9.50730611,104.590869 9.82540078,104.032238 C10.1434954,103.473607 10.7359024,103.126856 11.3794678,103.122604 C12.0230331,103.118352 12.6199839,103.457244 12.9454545,104.011623 C15.2519982,107.943588 17.9557341,111.629375 21.0143541,115.011309 C21.4862704,115.52932 21.6136905,116.27394 21.3408034,116.919019 C21.0679163,117.564099 20.444471,117.992036 19.7435407,118.015393 Z M129.913876,106.136649 C129.260766,106.159641 128.646534,105.827186 128.309369,105.268207 C127.972203,104.709227 127.965136,104.011644 128.290909,103.445969 C130.558266,99.48592 132.410491,95.3029125 133.818182,90.9633508 C134.124713,90.0177005 135.140962,89.4992181 136.088038,89.805288 C137.035114,90.1113578 137.554378,91.1260775 137.247847,92.0717277 C135.760681,96.6402283 133.805853,101.043498 131.414354,105.211728 C131.110187,105.76043 130.541443,106.111014 129.913876,106.136649 Z M7.11961722,97.9423037 C6.35266343,97.9813795 5.64542724,97.5300437 5.35885167,96.8186387 C3.56004271,92.3658752 2.22602943,87.7397184 1.37799043,83.0136126 C1.26311841,82.3814021 1.49476101,81.7360243 1.98566071,81.3205867 C2.4765604,80.9051492 3.15213785,80.7827667 3.75790954,80.9995396 C4.36368124,81.2163125 4.80761606,81.7393079 4.92248804,82.3715183 C5.7438504,86.856095 7.02656307,91.2440537 8.75023923,95.4656545 C8.97381959,96.0103657 8.91591431,96.6298937 8.59524939,97.1238891 C8.27458447,97.6178846 7.73185854,97.9236499 7.14258373,97.9423037 L7.11961722,97.9423037 Z M137.944498,83.8162304 C137.402624,83.835711 136.880854,83.6101211 136.524322,83.2022103 C136.167791,82.7942995 136.014532,82.2475837 136.107177,81.7141361 C136.878794,77.2219928 137.189175,72.6629374 137.033493,68.1078534 L137.033493,67.9549738 C136.997555,66.9628854 137.77388,66.129549 138.767464,66.0936649 C139.761048,66.0577809 140.595641,66.8329377 140.631579,67.8250262 L140.631579,67.9779058 C140.802125,72.7780009 140.481484,77.5829418 139.674641,82.3180105 C139.528583,83.1637528 138.803773,83.7882002 137.944498,83.8085864 L137.944498,83.8162304 Z M2.15885167,74.7122513 C1.68586719,74.737153 1.22264651,74.5715641 0.872962602,74.2525806 C0.52327869,73.9335972 0.316361126,73.4878826 0.298564593,73.015288 L0.298564593,72.9388482 C0.128222327,68.164727 0.443715369,63.3856712 1.24019139,58.6751832 C1.40719807,57.6957597 2.33776029,57.036962 3.31866029,57.2037173 C4.29956028,57.3704726 4.95935118,58.2996341 4.7923445,59.2790576 C4.03647908,63.7471754 3.7363791,68.2803157 3.89665072,72.8089005 C3.93996712,73.8125004 3.16367498,74.6627461 2.15885167,74.7122513 Z M137.799043,59.9517277 C136.90711,59.9811538 136.128388,59.353258 135.969378,58.4764398 C135.14793,53.9943624 133.865212,49.6089472 132.141627,45.3899476 C131.765333,44.4632948 132.21262,43.4075072 133.14067,43.0317801 C134.06872,42.656053 135.126099,43.1026665 135.502392,44.0293194 C137.314223,48.4806659 138.661072,53.1068537 139.521531,57.8343455 C139.608602,58.303758 139.504956,58.7884702 139.23348,59.1814453 C138.962005,59.5744203 138.545032,59.8433313 138.074641,59.9287958 L137.799043,59.9517277 Z M5.41244019,51.2146597 C4.8390386,51.22975 4.29280011,50.9709175 3.94190122,50.517852 C3.59100233,50.0647864 3.47750899,49.4718015 3.63636364,48.921466 C5.11835359,44.3510171 7.06804294,39.9452041 9.45454545,35.773822 C9.77317849,35.2153466 10.3659998,34.869027 11.0096992,34.8653183 C11.6533987,34.8616095 12.2501831,35.2010752 12.5752495,35.7558418 C12.9003159,36.3106085 12.904279,36.9963938 12.5856459,37.5548691 C10.3214091,41.5127965 8.47176357,45.6932096 7.06602871,50.0298429 C6.81304549,50.7280643 6.15590233,51.1989156 5.41244019,51.2146597 Z M129.546411,37.7306806 C128.885706,37.7539169 128.265468,37.4134462 127.9311,36.8439791 C125.619468,32.9138609 122.910582,29.2306094 119.84689,25.8519372 C119.33883,25.3947473 119.134344,24.6894473 119.319229,24.0319584 C119.504115,23.3744694 120.046389,22.8785256 120.71853,22.7522091 C121.390672,22.6258926 122.076413,22.8910539 122.488038,23.4364398 C125.7168,26.9960227 128.571892,30.876485 131.008612,35.0170681 C131.329911,35.5624175 131.340181,36.2363285 131.035648,36.7911862 C130.731115,37.3460439 130.156694,37.7000137 129.523445,37.7230366 L129.546411,37.7306806 Z M16.5435407,30.300733 C15.842639,30.3281799 15.1896729,29.9463624 14.8707293,29.3225678 C14.5517856,28.6987733 14.6250307,27.9467639 15.0583732,27.3960209 C18.0142096,23.6097744 21.348824,20.1341894 25.0105263,17.0231414 C25.4873084,16.5240558 26.208179,16.3416218 26.8654815,16.5536994 C27.522784,16.7657771 28.0004307,17.3349108 28.0945693,18.0182031 C28.1887079,18.7014954 27.8827124,19.3782685 27.307177,19.7596859 C23.8448469,22.7145731 20.6924269,26.0133568 17.8985646,29.6051309 C17.5723727,30.0259545 17.0761061,30.2807131 16.5435407,30.300733 Z M114.158852,19.6679581 C113.718544,19.6835688 113.287917,19.536614 112.949282,19.2551832 C109.433973,16.3451756 105.62981,13.8017853 101.596172,11.664712 C100.716745,11.2003302 100.380851,10.1120305 100.845933,9.23392674 C101.311015,8.35582293 102.400955,8.02043497 103.280383,8.48481675 C107.528709,10.7363471 111.535486,13.4154639 115.238278,16.4804188 C115.814731,16.9562193 116.03624,17.7385032 115.794632,18.4452463 C115.553024,19.1519895 114.8987,19.6357612 114.151196,19.6603141 L114.158852,19.6679581 Z M34.1588517,14.3936126 C33.3439602,14.4258291 32.6092952,13.9066881 32.3687024,13.1286278 C32.1281097,12.3505676 32.4417781,11.5082347 33.1330144,11.0761257 C37.2076908,8.51877623 41.5355024,6.38758523 46.0478469,4.71633508 C46.9801247,4.37227035 48.0152252,4.84797367 48.3598086,5.77884817 C48.704392,6.70972267 48.2279716,7.74326512 47.2956938,8.08732984 C43.0160796,9.67215682 38.911457,11.6932021 35.04689,14.1184293 C34.780294,14.2866024 34.4739619,14.3815279 34.1588517,14.3936126 Z M93.5196172,7.9191623 C93.2928357,7.92574274 93.066854,7.8894326 92.8535885,7.8121466 C88.5640172,6.28621494 84.1285164,5.20526416 79.6172249,4.58638743 C78.9799588,4.49899766 78.4377928,4.07878051 78.1949556,3.48402772 C77.9521184,2.88927492 78.0455028,2.21034359 78.4399317,1.70298058 C78.8343606,1.19561757 79.4699109,0.936903397 80.107177,1.02429319 C84.8744687,1.67699297 89.5615235,2.81945593 94.0937799,4.43350785 C94.9158919,4.71763866 95.4166006,5.54844339 95.2830439,6.40680323 C95.1494872,7.26516307 94.4199348,7.90512085 93.5502392,7.92680628 L93.5196172,7.9191623 Z M56.1607656,5.47308901 C55.2240403,5.51196427 54.4144474,4.82603155 54.3003777,3.89686354 C54.186308,2.96769553 54.8060066,2.10682306 55.7244019,1.91863874 C60.4299958,0.928891774 65.2237475,0.416688898 70.0325359,0.389842932 C71.0261199,0.368734667 71.8487164,1.15586965 71.8698565,2.14795812 C71.8909965,3.14004658 71.102675,3.96140482 70.1090909,3.98251309 L70.0555024,3.98251309 C65.4903705,4.0097933 60.9399074,4.50154855 56.4746411,5.45015707 C56.3708786,5.46686412 56.2658585,5.47453695 56.1607656,5.47308901 Z\"\n              id=\"Shape\"\n            />\n          </g>\n          <g id=\"Group\" opacity=\"0.3\" transform=\"translate(143.157895, 9.937173)\" fill=\"#C1C7D0\">\n            <path\n              d=\"M3.67464115,16.9619895 C3.4821549,16.9135821 3.35479614,16.7309832 3.37607656,16.5339267 C3.37607656,16.416719 3.39138756,16.3020593 3.42200957,16.1899476 C3.45863702,15.9532422 3.50718339,15.7185294 3.56746411,15.4867016 C3.79659095,14.6127055 4.2264482,13.8040107 4.82296651,13.124712 C5.54164908,12.3515449 6.43366256,11.7595108 7.42583732,11.3971728 L9.32440191,10.6327749 C10.3538957,10.2884796 11.1435596,9.45412946 11.4296651,8.40837696 C11.5279721,8.03200848 11.5590699,7.64128405 11.5215311,7.25413613 C11.4857083,6.86014201 11.3628218,6.47898394 11.1617225,6.13811518 C10.9405401,5.7712585 10.6460674,5.45381082 10.2966507,5.20554974 C9.87838479,4.91141537 9.40827303,4.69875715 8.91100478,4.57874346 C8.39121626,4.42619824 7.84200245,4.40258349 7.31100478,4.50994764 C6.85534038,4.60935206 6.42524698,4.80195209 6.04784689,5.07560209 C5.67500081,5.35721252 5.36260232,5.71073122 5.1291866,6.11518325 C4.88093408,6.52451937 4.69273575,6.96727812 4.57033493,7.42994764 C4.53460925,7.57263525 4.50398724,7.70513089 4.4784689,7.82743455 C4.44440318,7.9938222 4.34257429,8.13857109 4.19737224,8.22701101 C4.05217019,8.31545094 3.87667408,8.33961567 3.71291866,8.29371728 L0.765550239,7.37643979 C0.486479438,7.29689199 0.303343066,7.03062114 0.329186603,6.74198953 C0.329186603,6.65026178 0.341945774,6.55853403 0.367464115,6.46680628 C0.413397129,6.20691099 0.466985646,5.95211169 0.528229665,5.70240838 C0.761538461,4.81855845 1.15884083,3.98625719 1.69952153,3.2486911 C2.2461278,2.49616236 2.94187651,1.86390599 3.74354067,1.39120419 C4.59527983,0.895024603 5.53729439,0.572831293 6.51483254,0.443350785 C7.65634614,0.300278092 8.81503633,0.388673973 9.9215311,0.703246073 C11.0732655,0.982980352 12.1633298,1.4727709 13.1368421,2.14795812 C13.9461813,2.71460259 14.6420701,3.4275928 15.1885167,4.25005236 C15.6781959,4.99991063 15.997025,5.84797194 16.122488,6.73434555 C16.2459207,7.59159451 16.1964667,8.46483262 15.9770335,9.30272251 C15.7003047,10.4988535 15.0835814,11.5897662 14.2009569,12.4443979 C13.3220893,13.2446358 12.2947848,13.8652844 11.1770335,14.2713089 L9.57703349,14.8751832 C8.93416496,15.0764351 8.35410174,15.4397453 7.89282297,15.9300524 C7.69795446,16.1461264 7.52606151,16.3818032 7.37990431,16.6332984 C7.22708163,16.8923557 7.10137893,17.1664362 7.00478469,17.4512042 C6.93573802,17.6490764 6.72471173,17.7594476 6.52248804,17.7034555 L3.67464115,16.9619895 Z M1.33205742,21.4490052 C1.50522429,20.7498658 1.9556721,20.1510925 2.57990431,19.7902618 C3.19276119,19.4104991 3.93714845,19.3051106 4.63157895,19.4997906 C6.08589311,19.8847884 6.95504957,21.3710638 6.57607656,22.8249215 C6.40284896,23.5226722 5.94468797,24.1159986 5.31291866,24.460733 C4.69126881,24.8252266 3.9479522,24.9217951 3.25358852,24.7282723 C2.55992232,24.5505947 1.96635409,24.1030508 1.60533978,23.485511 C1.24432547,22.8679712 1.14591088,22.1318309 1.33205742,21.4413613 L1.33205742,21.4490052 Z\"\n              id=\"Shape\"\n            />\n          </g>\n          <g id=\"Group\" opacity=\"0.3\" transform=\"translate(11.483254, 0.000000)\" fill=\"#C1C7D0\">\n            <path\n              d=\"M3.45263158,17.0613613 C3.26593813,16.9999045 3.15212274,16.81158 3.184689,16.6180105 C3.184689,16.5008028 3.2076555,16.3861431 3.25358852,16.2740314 C3.30835701,16.0415287 3.37478841,15.81192 3.45263158,15.5860733 C3.7384919,14.7215446 4.2235907,13.936082 4.86889952,13.2928796 C5.64134788,12.5763691 6.5726126,12.0525027 7.58660287,11.7640838 L9.53110048,11.1219895 C10.5836438,10.845994 11.4283045,10.0628468 11.7818182,9.03518325 C11.905053,8.66584805 11.962067,8.27770094 11.9502392,7.88858639 C11.9414039,7.49268261 11.8446589,7.10367421 11.6669856,6.74963351 C11.4809249,6.37281104 11.2205318,6.03740952 10.9014354,5.76356021 C10.5041083,5.44203303 10.0495852,5.19825673 9.56172249,5.04502618 C9.05317702,4.85791539 8.50657949,4.79756529 7.96937799,4.86921466 C7.49095048,4.93175557 7.03150705,5.09596788 6.62200957,5.35078534 C6.23189645,5.60299356 5.89614613,5.93044209 5.63444976,6.3139267 C5.36007328,6.70655383 5.14351426,7.13644573 4.99138756,7.5904712 C4.94545455,7.72806283 4.90717703,7.85801047 4.87655502,7.98031414 C4.83556205,8.15257986 4.72180274,8.29864795 4.56469072,8.38075103 C4.4075787,8.46285411 4.22253928,8.47293127 4.05741627,8.40837696 L1.20191388,7.30764398 C0.928565345,7.20852926 0.764568254,6.92919062 0.811483254,6.6426178 C0.811483254,6.55089005 0.831897927,6.4591623 0.872727273,6.36743455 C0.933971292,6.11263525 1.00542265,5.85783595 1.08708134,5.60303665 C1.38113007,4.7363737 1.83557828,3.9325629 2.42679426,3.23340314 C3.02456414,2.52318903 3.76194343,1.94301918 4.59330144,1.52879581 C5.47496364,1.08978267 6.43516038,0.829958436 7.41818182,0.764397906 C8.56502592,0.699399832 9.71323,0.865781802 10.7942584,1.25361257 C11.9264287,1.60990465 12.9828054,2.17228468 13.9100478,2.91235602 C14.6801095,3.53334768 15.3266937,4.29304259 15.8162679,5.15204188 C16.2541878,5.93192239 16.5155082,6.79820023 16.5818182,7.68984293 C16.6461737,8.5537654 16.5368532,9.42181532 16.2602871,10.2429319 C15.9011343,11.4172901 15.2099672,12.4630977 14.2698565,13.2546597 C13.3395541,13.9941991 12.2732479,14.5447275 11.1311005,14.8751832 L9.49282297,15.3643979 C8.83717925,15.5219973 8.23334866,15.8458373 7.73971292,16.3046073 C7.53094535,16.5064335 7.34366329,16.7292967 7.18086124,16.9696335 C7.01273243,17.2094863 6.86911145,17.4655663 6.75215311,17.7340314 C6.6708489,17.9274513 6.45301088,18.0244943 6.25454545,17.9557068 L3.45263158,17.0613613 Z M0.811483254,21.4031414 C1.0301283,20.7162284 1.51932402,20.147739 2.16650718,19.8284817 C2.80354241,19.490343 3.55351387,19.4348732 4.23349282,19.6756021 C5.65767373,20.1579331 6.42399623,21.6985189 5.94832536,23.1230366 C5.72407846,23.8005858 5.22763256,24.354439 4.57799043,24.6518325 C3.93283017,24.9747315 3.18386522,25.0216438 2.50334928,24.7817801 C1.10346144,24.313332 0.346873956,22.8024348 0.811483254,21.4031414 Z\"\n              id=\"Shape\"\n            />\n          </g>\n          <g id=\"Group\" opacity=\"0.3\" transform=\"translate(0.000000, 120.774869)\" fill=\"#C1C7D0\">\n            <path\n              d=\"M10.2507177,17.871623 C10.066335,17.9425541 9.85775094,17.867707 9.76076555,17.6958115 L9.6,17.3824084 C9.49462399,17.1681521 9.40008714,16.9487485 9.31674641,16.7250262 C9.00232179,15.8783684 8.88961829,14.9702464 8.98755981,14.0725654 C9.13139661,13.0252725 9.52235365,12.0270818 10.1282297,11.1602094 L11.2382775,9.44031414 C11.8906538,8.55973781 12.0547098,7.41020078 11.6746411,6.38272251 C11.5388014,6.0168501 11.3392378,5.67784396 11.0851675,5.38136126 C10.8303228,5.07835152 10.511338,4.83555702 10.1511962,4.6704712 C9.75812295,4.49648378 9.33330672,4.40540287 8.90334928,4.40293194 C8.37949854,4.39781711 7.85959596,4.49385431 7.3722488,4.68575916 C6.85670555,4.85887004 6.39147548,5.15543425 6.01722488,5.5495288 C5.71514577,5.90717224 5.49093243,6.32368543 5.35885167,6.77256545 C5.21204305,7.2129125 5.15478303,7.67809961 5.19043062,8.1408377 C5.22239525,8.61898427 5.32294243,9.09007244 5.48899522,9.53968586 C5.5400319,9.67727749 5.59106858,9.80212914 5.64210526,9.91424084 C5.7138017,10.0725062 5.71470723,10.2537487 5.64459577,10.4127205 C5.57448431,10.5716923 5.43997232,10.6933912 5.27464115,10.7474346 L2.36555024,11.695288 C2.09062434,11.7877689 1.78865769,11.6722962 1.64593301,11.4201047 L1.53110048,11.1678534 C1.41881978,10.933438 1.31929825,10.6990227 1.23253589,10.4646073 C0.908933764,9.60498005 0.750506251,8.69215148 0.765550239,7.7739267 C0.780423155,6.84513628 0.98627494,5.92930389 1.37033493,5.08324607 C1.77320845,4.19246647 2.34814295,3.38980879 3.06220096,2.72125654 C3.9152958,1.9513887 4.91513427,1.36122803 6.00191388,0.986073298 C7.10451578,0.553622754 8.27760911,0.328168114 9.46220096,0.32104712 C10.4522984,0.31965958 11.4338689,0.503751116 12.3559809,0.863769634 C13.18959,1.20627135 13.9372015,1.72828967 14.5454545,2.39256545 C15.1503053,3.02342252 15.6215753,3.7695601 15.9311005,4.58638743 C16.3926896,5.725056 16.5149772,6.97263503 16.2832536,8.17905759 C16.0247603,9.33940426 15.5410005,10.4379118 14.8593301,11.4124607 L13.8947368,12.8265969 C13.4869168,13.3599654 13.2232936,13.9890762 13.1291866,14.6535079 C13.0994859,14.9406674 13.0994859,15.2301179 13.1291866,15.5172775 C13.1551185,15.8152702 13.2115534,16.1098267 13.2976077,16.3963351 C13.3164748,16.5861901 13.1975855,16.7626515 13.0143541,16.8167539 L10.2507177,17.871623 Z M10.9090909,22.8937173 C10.6475562,22.220209 10.672439,21.4693276 10.9779904,20.814555 C11.2654808,20.1484526 11.8216387,19.6347809 12.5090909,19.4004188 C13.9232856,18.8810016 15.4917113,19.6024857 16.015311,21.0132984 C16.2753556,21.6837696 16.2420338,22.4323799 15.923445,23.0771728 C15.6241489,23.7314594 15.0715577,24.2363193 14.3923445,24.4760209 C13.7225521,24.7272603 12.9799456,24.7005809 12.3299687,24.4019267 C11.6799917,24.1032725 11.1766412,23.5574541 10.9320574,22.8860733 L10.9090909,22.8937173 Z\"\n              id=\"Shape\"\n            />\n          </g>\n          <path\n            d=\"M115.108134,102.880314 L109.63445,97.5830366 L102.262201,105.227016 L107.735885,110.524293 C109.133421,111.876478 110.118252,113.596675 110.576077,115.485236 C111.033901,117.373796 112.018732,119.093994 113.416268,120.446178 L135.617225,141.925759 C137.233225,143.48915 139.405129,144.34736 141.654958,144.31152 C143.904787,144.27568 146.048167,143.348727 147.613397,141.73466 C149.179144,140.121093 150.038648,137.952458 150.002754,135.706015 C149.96686,133.459573 149.03851,131.319418 147.42201,129.756545 L125.221053,108.276963 C123.821794,106.925049 122.067076,105.997323 120.160766,105.601571 C118.252095,105.191507 116.499663,104.247679 115.108134,102.880314 Z\"\n            id=\"Shape\"\n            fill=\"#CFD4DB\"\n          />\n          <path\n            d=\"M119.946411,105.486911 C118.127823,105.066663 116.457992,104.16034 115.115789,102.865026 L113.44689,101.252147 C112.079366,99.9372034 110.113151,99.4506129 108.288898,99.975669 C106.464645,100.500725 105.059502,101.957659 104.602773,103.797659 C104.146045,105.637658 104.707117,107.581183 106.074641,108.896126 L107.743541,110.509005 C109.082215,111.805584 110.04277,113.44109 110.522488,115.240628 C114.142246,112.486792 117.320106,109.197722 119.946411,105.486911 Z\"\n            id=\"Shape\"\n            fill=\"#DFE1E5\"\n            style={{ mixBlendMode: 'multiply' }}\n          />\n          <path\n            d=\"M78.8516746,120.010471 C54.5201756,120.184949 34.593323,100.748551 34.1984139,76.4562496 C33.8035048,52.1639488 53.0880882,32.0920254 77.4124402,31.4779058 C89.1754429,31.2567399 100.538247,35.7432734 108.968421,43.9375916 C121.849408,56.3927091 125.949742,75.3681653 119.358022,92.0184082 C112.766302,108.668651 96.7801668,119.71593 78.8516746,120.010471 Z M77.5502392,42.0418848 C61.4460779,42.3028263 47.7691035,53.8861084 44.8835113,69.7079398 C41.9979191,85.5297712 50.7073746,101.183618 65.6855839,107.096322 C80.6637932,113.009026 97.739179,107.533842 106.469237,94.0191357 C115.199296,80.5044292 113.15262,62.7141774 101.580861,51.5280628 C95.1611126,45.2880999 86.5078568,41.8721948 77.5502392,42.0418848 Z\"\n            id=\"_Compound_Clipping_Path_\"\n            fill=\"url(#linearGradient-1)\"\n          />\n          <path\n            d=\"M91.8047847,65.9063874 L87.7167464,61.9162304 C87.4295606,61.6291576 87.039861,61.467855 86.6334928,61.467855 C86.2271246,61.467855 85.8374251,61.6291576 85.5502392,61.9162304 L78.0861244,69.5602094 L70.430622,62.053822 C70.1434362,61.7667492 69.7537366,61.6054466 69.3473684,61.6054466 C68.9410002,61.6054466 68.5513007,61.7667492 68.2641148,62.053822 L64.2449761,66.1357068 C63.9574706,66.4224604 63.7959247,66.8115733 63.7959247,67.2173298 C63.7959247,67.6230864 63.9574706,68.0121993 64.2449761,68.2989529 L71.9004785,75.7824084 L64.4057416,83.4263874 C64.1182361,83.713141 63.9566903,84.1022539 63.9566903,84.5080105 C63.9566903,84.913767 64.1182361,85.3028799 64.4057416,85.5896335 L68.4937799,89.6027225 C68.7809658,89.8897953 69.1706653,90.0510979 69.5770335,90.0510979 C69.9834017,90.0510979 70.3731012,89.8897953 70.6602871,89.6027225 L78.1550239,81.9587435 L85.8105263,89.442199 C86.0977122,89.7292717 86.4874117,89.8905744 86.8937799,89.8905744 C87.3001481,89.8905744 87.6898476,89.7292717 87.9770335,89.442199 L91.9961722,85.3603141 C92.2836778,85.0735606 92.4452236,84.6844476 92.4452236,84.2786911 C92.4452236,83.8729346 92.2836778,83.4838216 91.9961722,83.1970681 L84.3406699,75.7136126 L91.8354067,68.0696335 C92.1188909,67.7788418 92.2749544,67.3874411 92.2692105,66.9816721 C92.2634666,66.5759031 92.0963866,66.189063 91.8047847,65.9063874 Z\"\n            id=\"_Clipping_Path_\"\n            fill=\"#C1C7D0\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default NoResults;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport NoResultsSVG from \"./NoResultsSVG\"\nimport styled from \"styled-components\"\nimport { font } from \"../../utils/styles\"\n\nexport const NoResultsContainer = styled.div`\n  padding-top: 50px;\n  text-align: center;\n`\n\nexport const NoResultsTitle = styled.div`\n  padding-top: 30px;\n  ${font.medium}\n  ${font.size(20)}\n`\n\nexport const NoResultsTip = styled.div`\n  padding-top: 10px;\n  ${font.size(15)}\n`\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  tip: PropTypes.string.isRequired\n}\n\nconst NoResults = ({ title, tip }) => (\n  <NoResultsContainer>\n    <NoResultsSVG />\n    <NoResultsTitle>{title}</NoResultsTitle>\n    <NoResultsTip>{tip}</NoResultsTip>\n  </NoResultsContainer>\n)\n\nNoResults.propTypes = propTypes\n\nexport default NoResults","export const capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}","import styled from \"styled-components\"\nimport { Avatar } from \"../../shared/components\"\nimport { color, mixin } from \"../../shared/utils/styles\"\n\nexport const Container = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: 2fr 4fr;\n  color: ${color.textDarkest};\n  gap: 15px;\n`\n\nexport const Card = styled.div`\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 25px;\n`\n\nexport const InfoCard = styled.div`\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n`\n\nexport const ProfileAvatar = styled(Avatar)`\n  margin-bottom: 15px;\n`\n\nexport const ProfileName = styled.span``\nexport const ProfileRole = styled.span`\n  font-size: 0.85rem;\n  ${mixin.tag()}\n`\nexport const CreateContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr;\n`\n\nexport const Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-column-gap: 15px;\n  grid-row-gap: 25px;\n  padding: 25px;\n`\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n`\n\nexport const InfoHeader = styled.h4`\n  font-weight: bold;\n`\n\nexport const InfoBody = styled.h5`\n  \n`\n\nexport const TableWrapper = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n  \n  table {\n    border: none;\n    background: white;\n    width: 100%;\n  }\n \n  thead {\n    background-color: rgba(0, 0, 0, 0.02);\n    \n    th {\n      font-weight: 600;\n    }\n  }\n  \n  th, td {\n    font-size: 12px;\n    line-height: 20px;\n  }\n  \n  th {\n    padding: 8px;\n  }\n  td {\n    padding: 12px;\n  }\n  \n  tr.date-block {\n    background-color: rgba(0, 0, 0, 0.04);\n  }\n`","import styled from \"styled-components\"\n\nexport const ModalContainer = styled.div`\n  padding: 25px;\n`\n\nexport const Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 15px;\n`\n","export const months = [\n  {label: \"Январь\", value: 1},\n  {label: \"Февраль\", value: 2},\n  {label: \"Март\", value: 3},\n  {label: \"Апрель\", value: 4},\n  {label: \"Май\", value: 5},\n  {label: \"Июнь\", value: 6},\n  {label: \"Июль\", value: 7},\n  {label: \"Август\", value: 8},\n  {label: \"Сентябрь\", value: 9},\n  {label: \"Открябрь\", value: 10},\n  {label: \"Ноябрь\", value: 11},\n  {label: \"Декабрь\", value: 12},\n]\n\nexport const years = [\n  {label: \"2019\", value: 2019},\n  {label: \"2020\", value: 2020},\n]","import React, { useMemo } from \"react\"\nimport PropTypes from \"prop-types\"\nimport Form from \"../../../shared/components/Form\"\nimport toast from \"../../../shared/utils/toast\"\nimport { ModalContainer, Row } from \"./Styles\"\nimport { months, years } from \"../../../shared/constants/dates\"\nimport moment from \"moment\"\nimport useApi from \"../../../shared/hooks/api\"\nimport pubsub from \"sweet-pubsub\"\nimport { ActionButton, Actions, FormElement, FormHeading } from \"../../Authentication/Styles\"\n\nconst propTypes = {\n  modalClose: PropTypes.func.isRequired,\n  employee: PropTypes.number.isRequired,\n}\n\n\nconst BountyModal = ({ modalClose, employee }) => {\n  const [{ data }] = useApi.get(`/types/bounties/`, {}, { mountFetch: true })\n  const [{isCreating}, createBounty] = useApi.post(`/bounties/`)\n  const bountyTypes = useMemo(\n    () => (data || []).map(el => ({ label: el.name, value: el.id })),\n    [data]\n  )\n  return <ModalContainer>\n    <Form\n      enableReinitialize\n      initialValues={{\n        month: moment().month() + 1,\n        year: moment().year(),\n        type: \"\",\n        amount: \"\",\n        note: \"\",\n        href: \"\"\n      }}\n      validations={{\n        month: Form.is.required(),\n        year: Form.is.required(),\n        type: Form.is.required(),\n        amount: Form.is.required()\n      }}\n      onSubmit={async (values, form) => {\n        try {\n          await createBounty({ ...values, employee })\n          toast.success(\"Премия создана.\")\n          pubsub.emit('fetch-unpayed-payments')\n          modalClose()\n        } catch (error) {\n          Form.handleAPIError(error, form)\n        }\n      }}\n    >\n      <FormElement>\n        <FormHeading>Создание премии</FormHeading>\n        <Row>\n          <Form.Field.Select\n            name=\"month\"\n            options={months}\n            label=\"Месяц\"\n          />\n          <Form.Field.Select\n            name=\"year\"\n            options={years}\n            label=\"Год\"\n          />\n        </Row>\n        <Form.Field.Select\n          name=\"type\"\n          options={bountyTypes}\n          label=\"Тип премии\"\n        />\n        <Form.Field.Input\n          name=\"amount\"\n          type=\"number\"\n          label=\"Сумма\"\n        />\n        <Form.Field.Textarea\n          name=\"note\"\n          label=\"Заметка\"\n        />\n        <Form.Field.Input\n          name=\"href\"\n          type=\"url\"\n          label=\"Ссылка на доказательство\"\n        />\n        <Actions>\n          <ActionButton type=\"submit\" variant=\"success\" disabled={isCreating} >\n            Создать\n          </ActionButton>\n        </Actions>\n      </FormElement>\n    </Form>\n  </ModalContainer>\n}\n\nBountyModal.propTypes = propTypes\n\nexport default BountyModal","import React, { useMemo } from \"react\"\nimport PropTypes from \"prop-types\"\nimport Form from \"../../../shared/components/Form\"\nimport toast from \"../../../shared/utils/toast\"\nimport { ModalContainer, Row } from \"./Styles\"\nimport { months, years } from \"../../../shared/constants/dates\"\nimport moment from \"moment\"\nimport useApi from \"../../../shared/hooks/api\"\nimport { ActionButton, Actions, FormElement, FormHeading } from \"../../Authentication/Styles\"\nimport pubsub from \"sweet-pubsub\"\n\nconst propTypes = {\n  modalClose: PropTypes.func.isRequired,\n  employee: PropTypes.number.isRequired\n}\n\n\nconst FineModal = ({ modalClose, employee }) => {\n  const [{ data }] = useApi.get(`/types/fines/`, {}, { mountFetch: true })\n  const [{ isCreating }, createFine] = useApi.post(`/fines/`)\n  const fineTypes = useMemo(\n    () => (data || []).map(el => ({ label: el.name, value: el.id })),\n    [data]\n  )\n  return <ModalContainer>\n    <Form\n      enableReinitialize\n      initialValues={{\n        month: moment().month() + 1,\n        year: moment().year(),\n        type: \"\",\n        amount: \"\",\n        note: \"\",\n        href: \"\"\n      }}\n      validations={{\n        month: Form.is.required(),\n        year: Form.is.required(),\n        type: Form.is.required(),\n        amount: Form.is.required()\n      }}\n      onSubmit={async (values, form) => {\n        try {\n          await createFine({ ...values, employee })\n          toast.success(\"Штраф создан.\")\n          modalClose()\n          pubsub.emit(\"fetch-unpayed-payments\")\n        } catch (error) {\n          Form.handleAPIError(error, form)\n        }\n      }}\n    >\n      <FormElement>\n        <FormHeading>Создание штрафа</FormHeading>\n        <Row>\n          <Form.Field.Select\n            name=\"month\"\n            options={months}\n            label=\"Месяц\"\n          />\n          <Form.Field.Select\n            name=\"year\"\n            options={years}\n            label=\"Год\"\n          />\n        </Row>\n        <Form.Field.Select\n          name=\"type\"\n          options={fineTypes}\n          label=\"Тип штрафа\"\n        />\n        <Form.Field.Input\n          name=\"amount\"\n          type=\"number\"\n          label=\"Сумма\"\n        />\n        <Form.Field.Textarea\n          name=\"note\"\n          label=\"Заметка\"\n        />\n        <Form.Field.Input\n          name=\"href\"\n          type=\"url\"\n          label=\"Ссылка на доказательство\"\n        />\n        <Actions>\n          <ActionButton type=\"submit\" variant=\"danger\" disabled={isCreating}>\n            Создать\n          </ActionButton>\n        </Actions>\n      </FormElement>\n    </Form>\n  </ModalContainer>\n}\n\nFineModal.propTypes = propTypes\n\nexport default FineModal","import React, { useCallback, useEffect, useMemo, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Icon } from \"../../../shared/components\"\nimport useApi from \"../../../shared/hooks/api\"\nimport pubsub from \"sweet-pubsub\"\nimport moment from \"moment\"\nimport { formatDateTime } from \"../../../shared/utils/dateTime\"\nimport NoResults from \"../../../shared/components/NoResults\"\n\n\nconst PaymentEntity = ({ entity }) => {\n  const URL = useMemo(\n    () => entity.__type === `bounty`\n      ? `/bounties/${entity.id}/`\n      : `/fines/${entity.id}/`,\n    [entity]\n  )\n  const prevUpdating = useRef(false)\n  const [{ isUpdating }, updateEntity] = useApi.patch(URL)\n\n  useEffect(() => {\n    if (prevUpdating.current && !isUpdating) {\n      pubsub.emit(\"fetch-unpayed-payments\")\n      pubsub.emit(\"fetch-transactions\")\n    }\n    prevUpdating.current = isUpdating\n  }, [isUpdating])\n\n  return <tr style={{ backgroundColor: entity.color }}>\n    <td className=\"text-center\" colSpan={1}>\n      {entity.id}\n    </td>\n    <td className=\"text-left\" colSpan={2}>\n      {entity.type.name}\n    </td>\n    <td colSpan={7}>\n      <p><b>Период: </b></p>\n      <p><b>Примечание: </b>{entity.note}</p>\n      {!!entity.href && <p>\n        <b>Доказательство: </b>\n        <a href={entity.href} target=\"_blank\" rel=\"noopener noreferrer\">\n          Открыть в новой вкладке\n        </a>\n      </p>}\n      <p><b>Создал(-а): </b>{entity.created_by.full_name}</p>\n      <p><b>Дата: </b>{formatDateTime(entity.created_at, \"DD.MM.YYYY HH:mm:ss\")}</p>\n    </td>\n    <td className=\"text-right\" colSpan={1}>\n      {entity.amount}\n    </td>\n    <td className=\"text-center\" colSpan={1}>\n      <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(2, 1fr)\",\n        gap: \"5px\",\n        margin: \"0 5px\",\n        alignItems: \"center\",\n        height: \"100%\"\n      }}>\n        <Icon\n          type=\"check\"\n          style={{ color: \"green\", cursor: \"pointer\" }}\n          size={20}\n          onClick={() => updateEntity({ status: true })}\n        />\n        <Icon\n          type=\"trash\"\n          style={{ color: \"red\", cursor: \"pointer\" }}\n          size={20}\n          onClick={() => updateEntity({\n            status: false,\n            status_change_reason: prompt(\"Введите причину отмены выплаты\")\n          })}\n        />\n      </div>\n    </td>\n  </tr>\n}\n\n\nconst propTypes = {\n  employee: PropTypes.number.isRequired\n}\n\nconst UnpayedPayments = ({ employee }) => {\n  const [{ data: bounties }, fetchBounties] = useApi.get(`/bounties/`, {\n    employee_id: employee,\n    status: \"null\"\n  }, { mountFetch: true })\n  const [{ data: fines }, fetchFines] = useApi.get(`/fines/`, {\n    employee_id: employee,\n    status: \"null\"\n  }, { mountFetch: true })\n\n  const data = useMemo(() => {\n    const _b = (bounties || []).map(el => ({ ...el, __type: \"bounty\", color: \"rgba(0, 255, 0, 0.05)\" }))\n    const _f = (fines || []).map(el => ({ ...el, __type: \"fine\", color: \"rgba(255, 0, 0, 0.05)\" }))\n    return [..._b, ..._f].sort((a, b) => moment(a.created_at).diff(moment(b.created_at)))\n  }, [bounties, fines])\n\n  const fetchAll = useCallback(() => {\n    fetchFines()\n    fetchBounties()\n  }, [fetchFines, fetchBounties])\n\n  useEffect(() => {\n    pubsub.on(\"fetch-unpayed-payments\", fetchAll)\n    return () => pubsub.off(\"fetch-unpayed-payments\", fetchAll)\n  }, [fetchAll])\n\n  return <table cellPadding={0} cellSpacing={0}>\n    <thead>\n    <tr>\n      <th className=\"text-center\" colSpan={1}>№</th>\n      <th className=\"text-left\" colSpan={2}>Тип</th>\n      <th className=\"text-left\" colSpan={7}>Описание</th>\n      <th className=\"text-right\" colSpan={1}>Сумма</th>\n      <th colSpan={1} />\n    </tr>\n    </thead>\n    <tbody>\n    {data.length > 0\n      ? data.map(payment => (<PaymentEntity key={`${payment.__type}-${payment.id}`} entity={payment} />))\n      : <tr>\n        <td colSpan={12}>\n          <NoResults tip=\"\" title=\"Нет штрафов или премий, ожидающих подтверждения!\" />\n        </td>\n      </tr>\n    }\n    </tbody>\n  </table>\n}\n\nUnpayedPayments.propTypes = propTypes\n\nexport default UnpayedPayments","import React from 'react'\n\nexport const formatMoney = amount => {\n  amount = parseFloat(amount)\n  return <span style={{ color: amount > 0 ? \"green\" : \"red\" }}>\n    {amount > 0 && \"+\"}{amount.toFixed(2)}\n  </span>\n}","import styled from \"styled-components\"\n\nexport const Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-column-gap: 15px;\n  grid-row-gap: 25px;\n  padding: 25px;\n`\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n`\n\nexport const InfoHeader = styled.h4`\n  font-weight: bold;\n`\n\nexport const InfoBody = styled.h5`\n  \n`","export const PaymentStatus = {\n  [null]: \"В ожидании\",\n  [true]: \"Выплачен\",\n  [false]: \"Отменен\"\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { formatDateTime } from \"../../shared/utils/dateTime\"\nimport { months } from \"../../shared/constants/dates\"\nimport { Info, InfoBody, InfoHeader, Row } from \"./Styles\"\nimport { PaymentStatus } from \"../../shared/constants/paymentStatuses\"\n\n\nconst propTypes = {\n  payment: PropTypes.object.isRequired\n}\n\nconst Payment = ({ payment }) => {\n\n  return <div style={{ padding: \"25px\" }}>\n    <Row>\n      <Info>\n        <InfoHeader>Идентификатор</InfoHeader>\n        <InfoBody>{payment.id}</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Статус</InfoHeader>\n        <InfoBody>{PaymentStatus[payment.status]}</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Месяц</InfoHeader>\n        <InfoBody>{months.find(el => el.value === payment.month).label}</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Год</InfoHeader>\n        <InfoBody>{payment.year}</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Кто выдал(-а)</InfoHeader>\n        <InfoBody>{payment.created_by?.full_name}</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Когда создан</InfoHeader>\n        <InfoBody>{formatDateTime(payment.created_at, \"DD.MM.YYYY HH:mm:ss\")}</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Сумма</InfoHeader>\n        <InfoBody>{payment.amount}</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Доказательство</InfoHeader>\n        <InfoBody>\n          {!!payment.href\n            ? <a href={payment.href} target=\"_blank\" rel=\"noopener noreferrer\">Открыть в новой вкладке</a>\n            : \"–\"\n          }\n        </InfoBody>\n      </Info>\n      <Info style={{ gridColumn: \"1 / span 2\" }}>\n        <InfoHeader>Заметка</InfoHeader>\n        <InfoBody>{payment.note}</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Дата изменения статуса</InfoHeader>\n        <InfoBody>{!!payment.status_changed_at\n          ? formatDateTime(payment.status_changed_at, \"DD.MM.YYYY HH:mm:ss\")\n          : \"–\"\n        }</InfoBody>\n      </Info>\n      <Info>\n        <InfoHeader>Кто изменил статус</InfoHeader>\n        <InfoBody>{payment.status_changed_by?.full_name || \"–\"}</InfoBody>\n      </Info>\n    </Row>\n  </div>\n}\n\nPayment.propTypes = propTypes\n\nexport default Payment\n","import React, { Fragment, useMemo } from \"react\"\nimport { formatMoney } from \"../../../shared/utils/moneyFormat\"\nimport { formatDateTime } from \"../../../shared/utils/dateTime\"\nimport { capitalize } from \"../../../shared/utils/string\"\nimport { Icon, Modal } from \"../../../shared/components\"\nimport { useModalStateHelper } from \"../../Home/components/shared\"\nimport Payment from \"../../../components/Payment\"\n\n\nconst TransactionEntity = ({ transaction }) => {\n  const transactionModalAvailable = useMemo(\n    () => [\"fine\", \"bounty\"].includes(transaction.entity__type),\n    [transaction.entity__type]\n  )\n  const modalHelper = useModalStateHelper()\n  return <tr>\n    <td>{formatDateTime(transaction.created_at, \"HH:mm:ss\")}</td>\n    <td colSpan={3}>{capitalize(transaction.entity_type)} | {transaction.entity_id}</td>\n    <td className=\"text-right\">{formatMoney(transaction.amount)}</td>\n    {transactionModalAvailable && <td className=\"text-right\">\n      <Icon\n        type=\"info\"\n        size={20}\n        style={{ color: \"cornflowerblue\" }}\n        onClick={modalHelper.open}\n      />\n      {modalHelper.isOpen() && (\n        <Modal\n          isOpen\n          withCloseIcon\n          testid={`modal:transaction-${transaction.id}`}\n          width={800}\n          onClose={modalHelper.close}\n          renderContent={() => (\n            <Payment payment={transaction.entity_object} />)\n          }\n        />\n      )}\n    </td>}\n  </tr>\n}\n\n\nconst Transactions = ({ groupedTransactions }) => {\n\n  return <table cellPadding={0} cellSpacing={0}>\n    <thead>\n    <tr>\n      <th className=\"text-left\">Дата</th>\n      <th className=\"text-left\" colSpan={3}>Источник</th>\n      <th className=\"text-right\">Сумма</th>\n      <th />\n    </tr>\n    </thead>\n    <tbody>\n    {Object.entries(groupedTransactions).map(([date, _transactions]) => (\n      <Fragment key={date}>\n        <tr className=\"date-block\">\n          <th className=\"text-left\">{date}</th>\n          <th className=\"text-left\" colSpan={3} />\n          <th className=\"text-right\">\n            {formatMoney(_transactions.reduce((acc, next) => acc + parseFloat(next.amount), 0))}\n          </th>\n          <th />\n        </tr>\n        {_transactions.map(transaction => (\n          <TransactionEntity\n            key={transaction.id}\n            transaction={transaction}\n          />\n        ))}\n      </Fragment>\n    ))}\n    </tbody>\n  </table>\n}\n\nexport default Transactions","import React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { FieldLabel, StyledField } from \"../../../shared/components/Form/Styles\"\nimport DatePicker from \"../../../shared/components/DatePicker\"\nimport { ActionButton, Actions } from \"../../Authentication/Styles\"\nimport { Modal } from \"../../../shared/components\"\nimport BountyModal from \"../Modals/CreateBounty\"\nimport FineModal from \"../Modals/CreateFine\"\nimport { useModalStateHelper } from \"../../Home/components/shared\"\nimport { formatDateTimeForAPI } from \"../../../shared/utils/dateTime\"\nimport moment from \"moment\"\nimport useApi from \"../../../shared/hooks/api\"\nimport lodash from \"lodash\"\nimport { TableWrapper } from \"../Styles\"\nimport qs from \"query-string\"\nimport UnpayedPayments from \"./UnpayedPayments\"\nimport pubsub from \"sweet-pubsub\"\nimport Transactions from \"./Transactions\"\n\nconst propTypes = {\n  employee: PropTypes.number.isRequired\n}\n\nconst History = ({ employee }) => {\n  const bountyModalHelper = useModalStateHelper()\n  const fineModalHelper = useModalStateHelper()\n  const [_from, _setFrom] = useState(formatDateTimeForAPI(moment().startOf(\"month\")))\n  const [_to, _setTo] = useState(formatDateTimeForAPI(moment().endOf(\"month\")))\n  const prevData = useRef(null)\n  const [{ isLoading, data }, fetchTransactions] = useApi.get(`/transactions/`, {\n    created_at_after: _from,\n    created_at_before: _to,\n    purpose_id: employee,\n    limit: 25\n  }, { mountFetch: true })\n  const [transactions, setTransactions] = useState([])\n  const groupedTransactions = useMemo(() => {\n    return lodash.groupBy(transactions, el => moment(el.created_at).format(\"DD.MM.YYYY\"))\n  }, [transactions])\n  const nextQueryParams = useMemo(() => data && data.next && qs.parseUrl(data.next).query, [data])\n  const fetchMore = useCallback(() => {\n    const container = document.getElementById(\"container\")\n    if (window.innerHeight + container.scrollTop !== container.scrollHeight || isLoading || !data.next) return\n    fetchTransactions(nextQueryParams)\n  }, [isLoading, data, fetchTransactions, nextQueryParams])\n\n  const newFetch = useCallback(() => {\n    prevData.current = null\n    setTransactions([])\n    fetchTransactions()\n  }, [fetchTransactions])\n\n  useEffect(() => {\n    const container = document.getElementById(\"container\")\n    container.addEventListener(\"scroll\", fetchMore)\n    return () => container.removeEventListener(\"scroll\", fetchMore)\n  }, [fetchMore])\n\n  useEffect(() => {\n    prevData.current = null\n    setTransactions([])\n    pubsub.on(\"fetch-transactions\", newFetch)\n    return () => pubsub.off(\"fetch-transactions\", newFetch)\n  }, [newFetch])\n\n  useEffect(() => {\n    if (data?.results && prevData.current?.next !== data?.next) {\n      setTransactions(prev => [...prev, ...data.results])\n    }\n    prevData.current = data\n  }, [data])\n\n  return <div>\n    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 4fr\", gap: \"15px\" }}>\n      <StyledField hasLabel>\n        <FieldLabel htmlFor=\"from\">От</FieldLabel>\n        <DatePicker id=\"from\" value={_from} onChange={_setFrom} withTime={false} />\n      </StyledField>\n      <StyledField hasLabel>\n        <FieldLabel htmlFor=\"to\">До</FieldLabel>\n        <DatePicker id=\"to\" value={_to} onChange={_setTo} withTime={false} />\n      </StyledField>\n      <Actions style={{ justifyContent: \"flex-end\" }}>\n        <ActionButton type=\"button\" variant=\"success\" icon=\"plus-square\" onClick={bountyModalHelper.open}>\n          Премия\n        </ActionButton>\n        <ActionButton type=\"button\" variant=\"danger\" icon=\"minus-square\" onClick={fineModalHelper.open}>\n          Штраф\n        </ActionButton>\n        {bountyModalHelper.isOpen() && (\n          <Modal\n            isOpen\n            testid=\"modal:bounty\"\n            width={600}\n            onClose={bountyModalHelper.close}\n            renderContent={({ close }) => (\n              <BountyModal modalClose={close} employee={employee} />\n            )}\n          />\n        )}\n        {fineModalHelper.isOpen() && (\n          <Modal\n            isOpen\n            testid=\"modal:fine\"\n            width={600}\n            onClose={fineModalHelper.close}\n            renderContent={({ close }) => (\n              <FineModal modalClose={close} employee={employee} />\n            )}\n          />\n        )}\n      </Actions>\n    </div>\n    <TableWrapper>\n      <Transactions groupedTransactions={groupedTransactions} />\n      <UnpayedPayments employee={employee} />\n    </TableWrapper>\n  </div>\n}\n\nHistory.propTypes = propTypes\n\nexport default History","\nexport const roles = [\n  {label: \"Director\", value: \"director\"},\n  {label: \"Administrator\", value: \"administrator\"},\n  {label: \"Master\", value: \"master\"},\n]","import { CreateContainer } from \"./Styles\"\nimport { ActionButton, Actions, FormElement, FormHeading, FormWrapper } from \"../Authentication/Styles\"\nimport Form from \"../../shared/components/Form\"\nimport toast from \"../../shared/utils/toast\"\nimport { roles } from \"../../shared/constants/roles\"\nimport React from \"react\"\nimport useApi from \"../../shared/hooks/api\"\n\n\nconst CreateProfile = ({ fetchEmployee, user, parlor }) => {\n  const [{ isCreating }, createProfile] = useApi.post(`/profiles/`)\n\n  return <CreateContainer>\n    <div />\n    <FormWrapper>\n      <Form\n        enableReinitialize\n        initialValues={{\n          role: \"\"\n        }}\n        validations={{\n          role: Form.is.required()\n        }}\n        onSubmit={async (values, form) => {\n          try {\n            await createProfile({ ...values, user, parlor })\n            fetchEmployee()\n            toast.success(\"Профиль для этого салона создан.\")\n          } catch (error) {\n            Form.handleAPIError(error, form)\n          }\n        }}\n      >\n        <FormElement>\n          <FormHeading>Create new profile for parlor {parlor}.</FormHeading>\n          <Form.Field.Select\n            name=\"role\"\n            label=\"Роль\"\n            options={roles}\n          />\n          <Actions>\n            <ActionButton type=\"submit\" variant=\"primary\" isWorking={isCreating}>\n              Создать\n            </ActionButton>\n          </Actions>\n        </FormElement>\n      </Form>\n    </FormWrapper>\n    <div />\n  </CreateContainer>\n}\n\nexport default CreateProfile","import React, { useContext } from \"react\"\nimport { Link, useParams } from \"react-router-dom\"\nimport useApi from \"../../shared/hooks/api\"\nimport { AuthenticationContext } from \"../../services/authentication.service\"\nimport { PageError, PageLoader } from \"../../shared/components\"\nimport {\n  Card,\n  Container,\n  Info, InfoBody,\n  InfoCard, InfoHeader,\n  ProfileAvatar,\n  ProfileName,\n  ProfileRole,\n  Row\n} from \"./Styles\"\nimport { Divider } from \"../Authentication/Styles\"\nimport { formatDateTime } from \"../../shared/utils/dateTime\"\nimport History from \"./History\"\nimport Breadcrumbs from \"../../shared/components/Breadcrumbs\"\nimport CreateProfile from \"./CreateProfile\"\n\nconst Profile = () => {\n  const { employeeId } = useParams()\n  const { parlor } = useContext(AuthenticationContext)\n  const [{ isLoading, data, error }, fetchEmployee] = useApi.get(`/users/${employeeId}/`, {}, { mountFetch: true })\n  if (isLoading) return <PageLoader />\n  if (error) return <PageError />\n  const profile = data.profile.find(p => p.parlor.id === parlor)\n\n  if (!profile) return <CreateProfile fetchEmployee={fetchEmployee} parlor={parlor} user={data.id} />\n\n  return <div>\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n      <Breadcrumbs items={[\n        { name: \"Сотрудники\", link: \"/employees\" },\n        { name: data.full_name }\n      ]} />\n      <Link to={`/employees/${employeeId}/motivations`}>Мотивация</Link>\n    </div>\n    <Container>\n      <Card>\n        <ProfileAvatar size={150} name={data.last_name} />\n        <ProfileName>{data.full_name}</ProfileName>\n        <ProfileRole>{profile.role_display}</ProfileRole>\n      </Card>\n      <InfoCard>\n        <span>Информация о сотруднике</span>\n        <Divider />\n        <Row>\n          <Info>\n            <InfoHeader>Дата рождения</InfoHeader>\n            <InfoBody>{formatDateTime(data.birth_date, \"DD.MM.YYYY\")}</InfoBody>\n          </Info>\n          <Info>\n            <InfoHeader>Номер телефона</InfoHeader>\n            <InfoBody>{data.phone_number}</InfoBody>\n          </Info>\n          <Info>\n            <InfoHeader>Дата регистрации</InfoHeader>\n            <InfoBody>{formatDateTime(data.date_joined, \"DD.MM.YYYY\")}</InfoBody>\n          </Info>\n          <Info>\n            <InfoHeader>Последний вход</InfoHeader>\n            <InfoBody>\n              {data.last_login\n                ? formatDateTime(data.last_login, \"DD.MM.YYYY\")\n                : \"–\"\n              }\n            </InfoBody>\n          </Info>\n        </Row>\n        {/*<Divider style={{ marginTop: \"0\" }} />*/}\n      </InfoCard>\n    </Container>\n    <History employee={profile.id} />\n  </div>\n}\n\nexport default Profile"],"sourceRoot":""}