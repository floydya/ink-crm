{"version":3,"sources":["layout/NavbarLeft/Styles.js","layout/NavbarLeft/index.jsx"],"names":["NavLeft","styled","aside","zIndexValues","navLeft","sizes","appNavBarLeftWidth","color","backgroundDarkPrimary","mixin","hardwareAccelerate","LogoLink","NavLink","StyledLogo","Logo","clickable","Bottom","div","Item","ItemText","font","bold","size","ProjectNavbarLeft","notificationsModalOpen","settingsModalOpen","location","useLocation","useContext","AuthenticationContext","dispatch","user","profileLink","useMemo","id","handleLogout","useCallback","authenticationActions","logoutUser","to","className","pathname","type","top","left","onClick"],"mappings":"yqDAMO,IAAMA,EAAUC,IAAOC,MAAV,IACPC,IAAaC,QAMfC,IAAMC,mBACDC,IAAMC,sBAElBC,IAAMC,oBAOGC,EAAWV,YAAOW,IAAPX,CAAH,KAQRY,EAAaZ,YAAOa,IAAPb,CAAH,IAInBQ,IAAMM,WAGGC,EAASf,IAAOgB,IAAV,KAONC,EAAOjB,IAAOgB,IAAV,IAQbR,IAAMM,WAaGI,EAAWlB,IAAOgB,IAAV,IAQjBG,IAAKC,KACLD,IAAKE,KAAK,IACVtB,G,yBCdWuB,UAhDW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,uBAAwBC,EAAwB,EAAxBA,kBAC7CC,EAAWC,cAD0D,EAEhDC,qBAAWC,KAA9BC,EAFmE,EAEnEA,SAAUC,EAFyD,EAEzDA,KAEZC,EAAcC,mBAAQ,6CAAoBF,QAApB,IAAoBA,OAApB,EAAoBA,EAAMG,MAAM,CAACH,IAEvDI,EAAeC,uBAAY,WAC/BN,EAASO,IAAsBC,gBAC9B,CAACR,IAEJ,OAAO,kBAAC9B,EAAD,KACL,kBAACW,EAAD,CAAU4B,GAAG,KACX,kBAAC1B,EAAD,CAAYN,MAAM,UAGpB,kBAAC,IAAD,CAAMgC,GAAG,SACP,kBAACrB,EAAD,CAAMsB,UAAiC,UAAtBd,EAASe,UAAwB,UAChD,kBAAC,IAAD,CAAMC,KAAK,OAAOpB,KAAM,GAAIqB,IAAK,EAAGC,KAAM,IAC1C,kBAACzB,EAAD,qDAIJ,kBAACD,EAAD,CAAM2B,QAASrB,GACb,kBAAC,IAAD,CAAMkB,KAAK,eAAepB,KAAM,GAAIqB,IAAK,EAAGC,KAAM,IAClD,kBAACzB,EAAD,4EAGF,kBAACH,EAAD,KACE,kBAAC,IAAD,CAAMuB,GAAIP,GACR,kBAACd,EAAD,CAAMsB,UAAWd,EAASe,WAAaT,GAAe,UACpD,kBAAC,IAAD,CAAMU,KAAK,OAAOpB,KAAM,KACxB,kBAACH,EAAD,qDAGJ,kBAACD,EAAD,CAAM2B,QAASpB,GACb,kBAAC,IAAD,CAAMiB,KAAK,WAAWpB,KAAM,KAC5B,kBAACH,EAAD,gEAEF,kBAACD,EAAD,CAAM2B,QAASV,GACb,kBAAC,IAAD,CAAMO,KAAK,OAAOpB,KAAM,KACxB,kBAACH,EAAD","file":"static/js/14.b851dc89.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nimport { font, sizes, color, mixin, zIndexValues } from '../../shared/utils/styles';\nimport { Logo } from '../../shared/components';\n\nexport const NavLeft = styled.aside`\n  z-index: ${zIndexValues.navLeft};\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-x: hidden;\n  height: 100vh;\n  width: ${sizes.appNavBarLeftWidth}px;\n  background: ${color.backgroundDarkPrimary};\n  transition: all 0.1s;\n  ${mixin.hardwareAccelerate}\n  &:hover {\n    width: 200px;\n    box-shadow: 0 0 50px 0 rgba(0, 0, 0, 0.6);\n  }\n`;\n\nexport const LogoLink = styled(NavLink)`\n  display: block;\n  position: relative;\n  left: 0;\n  margin: 20px 0 10px;\n  transition: left 0.1s;\n`;\n\nexport const StyledLogo = styled(Logo)`\n  display: inline-block;\n  margin-left: 8px;\n  padding: 10px;\n  ${mixin.clickable}\n`;\n\nexport const Bottom = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 0;\n  width: 100%;\n`;\n\nexport const Item = styled.div`\n  position: relative;\n  width: 100%;\n  height: 42px;\n  line-height: 42px;\n  padding-left: 64px;\n  color: #deebff;\n  transition: color 0.1s;\n  ${mixin.clickable}\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n  }\n  i {\n    position: absolute;\n    left: 18px;\n  }\n  &.active {\n    background: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nexport const ItemText = styled.div`\n  position: relative;\n  right: 12px;\n  visibility: hidden;\n  opacity: 0;\n  text-transform: uppercase;\n  transition: all 0.1s;\n  transition-property: right, visibility, opacity;\n  ${font.bold}\n  ${font.size(12)}\n  ${NavLeft}:hover & {\n    right: 0;\n    visibility: visible;\n    opacity: 1;\n  }\n`;","import React, { useCallback, useContext, useMemo } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Icon } from \"../../shared/components\"\n\nimport { NavLeft, LogoLink, StyledLogo, Bottom, Item, ItemText } from \"./Styles\"\nimport { authenticationActions } from \"../../store/actions\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport { AuthenticationContext } from \"../../services/authentication.service\"\n\nconst propTypes = {\n  notificationsModalOpen: PropTypes.func.isRequired,\n  settingsModalOpen: PropTypes.func.isRequired\n}\n\nconst ProjectNavbarLeft = ({ notificationsModalOpen, settingsModalOpen }) => {\n  const location = useLocation()\n  const { dispatch, user } = useContext(AuthenticationContext)\n\n  const profileLink = useMemo(() => `/employees/${user?.id}`, [user])\n\n  const handleLogout = useCallback(() => {\n    dispatch(authenticationActions.logoutUser())\n  }, [dispatch])\n\n  return <NavLeft>\n    <LogoLink to=\"/\">\n      <StyledLogo color=\"#fff\" />\n    </LogoLink>\n\n    <Link to=\"/home\">\n      <Item className={location.pathname === \"/home\" && \"active\"}>\n        <Icon type=\"home\" size={22} top={1} left={3} />\n        <ItemText>Главная</ItemText>\n      </Item>\n    </Link>\n\n    <Item onClick={notificationsModalOpen}>\n      <Icon type=\"notification\" size={22} top={1} left={3} />\n      <ItemText>Уведомления</ItemText>\n    </Item>\n\n    <Bottom>\n      <Link to={profileLink}>\n        <Item className={location.pathname === profileLink && \"active\"}>\n          <Icon type=\"user\" size={27} />\n          <ItemText>Профиль</ItemText>\n        </Item>\n      </Link>\n      <Item onClick={settingsModalOpen}>\n        <Icon type=\"settings\" size={27} />\n        <ItemText>Настройки</ItemText>\n      </Item>\n      <Item onClick={handleLogout}>\n        <Icon type=\"exit\" size={27} />\n        <ItemText>Выйти</ItemText>\n      </Item>\n    </Bottom>\n  </NavLeft>\n}\n\nProjectNavbarLeft.propTypes = propTypes\n\nexport default ProjectNavbarLeft"],"sourceRoot":""}