{"version":3,"sources":["pages/Customer/Detail/Styles.js","shared/components/Tabs/Styles.js","shared/components/Tabs/index.jsx","shared/hooks/useInterval.js","pages/Customer/Detail/PhoneVertification.jsx","pages/Customer/Detail/RecordList.jsx","pages/Customer/Detail/index.jsx"],"names":["CustomerContainer","styled","div","LeftContainer","RightContainer","AvatarContainer","DL","dl","TabWrapper","TabNavWrapper","Label","mixin","darken","lighten","color","backgroundDarkPrimary","TabBodyWrapper","Tabs","tabs","useState","tab","setTab","useEffect","length","map","tabData","index","key","className","onClick","label","render","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","PhoneVerification","phone","useApi","patch","isUpdating","updatePhone","post","type","sendSMS","seconds","setSeconds","handleSend","useCallback","a","prev","validations","verification_code","Form","is","match","pin","test","initialValues","onSubmit","values","form","pubsub","emit","handleAPIError","Field","Input","name","variant","isWorking","style","flexDirection","alignItems","columns","Header","accessor","width","Cell","value","cell","formatDateTime","to","Button","icon","RecordList","records","profile","useCurrentProfile","customerId","useParams","display","justifyContent","Table","data","filter","el","parlor","CustomerDetail","get","mountFetch","isLoading","error","fetchCustomer","on","off","full_name","size","marginTop","fontWeight","number","email","birth_date","find_out","note","confirmed"],"mappings":"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","file":"static/js/17.350bb157.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const CustomerContainer = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 8fr;\n  gap: 25px;\n`\n\nexport const LeftContainer = styled.div`\n  background-color: white;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const RightContainer = styled.div`\n  background-color: white;\n  padding: 15px;\n`\n\nexport const AvatarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const DL = styled.dl`\n  padding-left: 15px;\n  dt {\n    font-weight: bold;\n  }\n  dd:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`\n","import styled from \"styled-components\"\nimport { color, mixin } from \"../../utils/styles\"\n\nexport const TabWrapper = styled.div`\n`\n\nexport const TabNavWrapper = styled.div`\n  display: flex;\n`\n\nexport const Label = styled.div`\n  color: ${mixin.darken(\"white\", 0.75)};\n  margin-right: 10px;\n  cursor: pointer;\n  width: 20%;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n  background: ${mixin.lighten(color.backgroundDarkPrimary, 1.5)};\n  text-align: center;\n  line-height: 3em;\n  \n  &.active {\n    background: ${mixin.lighten(color.backgroundDarkPrimary, 0.5)};\n    color: white;\n  }\n`\n\nexport const TabBodyWrapper = styled.div`\n  border-top:${mixin.lighten(color.backgroundDarkPrimary, 0.5)} 3px solid;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n  border-top-right-radius: 3px;\n  background: white;\n`","import React, { useEffect, useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Label, TabBodyWrapper, TabNavWrapper, TabWrapper } from \"./Styles\"\n\n\nconst propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    render: PropTypes.element.isRequired\n  })).isRequired\n}\n\nconst Tabs = ({ tabs }) => {\n  const [tab, setTab] = useState(0)\n\n  useEffect(() => {\n    setTab(0)\n  }, [tabs])\n\n  return tabs.length\n    ? <TabWrapper>\n      <TabNavWrapper>\n        {tabs.map((tabData, index) => <Label key={index} className={index === tab && \"active\"} onClick={() => setTab(index)}>{tabData.label}</Label>)}\n      </TabNavWrapper>\n      <TabBodyWrapper>\n        {tabs[tab].render}\n      </TabBodyWrapper>\n    </TabWrapper>\n    : null\n}\n\nTabs.propTypes = propTypes\n\nexport default Tabs\n","import { useEffect, useRef } from \"react\"\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef()\n\n  useEffect(\n    () => {\n      savedCallback.current = callback\n    },\n    [callback]\n  )\n\n  useEffect(\n    () => {\n      const handler = (...args) => savedCallback.current(...args)\n\n      if (delay !== null) {\n        const id = setInterval(handler, delay)\n        return () => clearInterval(id)\n      }\n    },\n    [delay]\n  )\n}\n\nexport default useInterval","import React, { useCallback, useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Form } from \"../../../shared/components\"\nimport { ActionButton, Actions, FormElement, FormHeading } from \"../../Authentication/Styles\"\nimport useApi from \"../../../shared/hooks/api\"\nimport pubsub from \"sweet-pubsub\"\nimport useInterval from \"../../../shared/hooks/useInterval\"\n\nconst propTypes = {\n  phone: PropTypes.object.isRequired\n}\n\nconst PhoneVerification = ({ phone }) => {\n  const [{ isUpdating }, updatePhone] = useApi.patch(`/phone/${phone.id}/`)\n  const [, sendSMS] = useApi.post(`/phone/${phone.id}/verify/`, { type: \"sms\" })\n  const [seconds, setSeconds] = useState(0)\n\n  const handleSend = useCallback(async () => {\n    await sendSMS()\n    await setSeconds(60)\n  }, [sendSMS])\n\n  useInterval(() => {\n    if (seconds > 0) setSeconds(prev => prev - 1)\n  }, 1000)\n\n  return <div>\n    <Form\n      validations={{\n        verification_code: Form.is.match(\n          (pin) => /^\\d{4}$/.test(pin),\n          \"Пин-код должен быть из 4-х цифр.\"\n        )\n      }}\n      initialValues={{ verification_code: \"\" }}\n      onSubmit={async (values, form) => {\n        try {\n          await updatePhone(values)\n          pubsub.emit(\"fetch-customer\")\n        } catch (error) {\n          Form.handleAPIError(error, form)\n        }\n      }}\n    >\n      <FormElement>\n        <FormHeading>Подтверждение номера телефона</FormHeading>\n        <Form.Field.Input name=\"verification_code\" label=\"Пин-код\" />\n        <Actions>\n          <ActionButton type=\"submit\" variant=\"primary\" isWorking={isUpdating}>\n            Подтвердить\n          </ActionButton>\n        </Actions>\n        <Actions style={{ flexDirection: \"column\", alignItems: \"center\" }}>\n          <ActionButton type=\"button\" variant=\"empty\" onClick={handleSend} isWorking={seconds > 0}>\n            Отправить пин-код повторно по СМС\n          </ActionButton>\n          {seconds > 0 && <h5>Повторная отправка возможна через {seconds} секунд.</h5>}\n        </Actions>\n      </FormElement>\n    </Form>\n  </div>\n}\n\nPhoneVerification.propTypes = propTypes\n\nexport default PhoneVerification","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useCurrentProfile } from \"../../../shared/hooks/currentUser\"\nimport Button from \"../../../shared/components/Button\"\nimport Table from \"../../../shared/components/Table\"\nimport { formatDateTime } from \"../../../shared/utils/dateTime\"\nimport { useParams, Link } from \"react-router-dom\"\n\n\nconst propTypes = {\n  records: PropTypes.array.isRequired\n}\n\nconst columns = [\n  {\n    Header: \"#\",\n    accessor: \"id\",\n    width: 50\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\"\n  },\n  {\n    Header: \"Datetime\",\n    accessor: \"datetime\",\n    Cell: ({ cell: { value } }) => {\n      return `${formatDateTime(value, \"DD.MM.YYYY HH:mm\")}`\n    }\n  },\n  {\n    Header: \"\",\n    accessor: \"id\",\n    Cell: ({ cell: { value } }) => (\n      <Link to={`/records/${value}`}>\n        <Button icon=\"link\" variant=\"empty\">\n          Перейти\n        </Button>\n      </Link>\n    ),\n    className: \"text-right\"\n  }\n]\n\nconst RecordList = ({ records }) => {\n  const profile = useCurrentProfile()\n  const { customerId } = useParams()\n  return <div>\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n      <h3>Записи в этом салоне. Всего записей у этого клиента: {records.length}.</h3>\n      <Link to={`/records/create/${customerId}`}>\n        <Button variant=\"primary\" icon=\"plus-square\">\n          Создать\n        </Button>\n      </Link>\n    </div>\n    <div>\n      <Table columns={columns} data={records.filter(el => el.parlor.id === profile.parlor.id)} />\n    </div>\n  </div>\n}\n\nRecordList.propTypes = propTypes\n\nexport default RecordList","import React, { useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { AvatarContainer, CustomerContainer, DL, LeftContainer, RightContainer } from \"./Styles\"\nimport { Avatar, PageError, PageLoader } from \"../../../shared/components\"\nimport { Divider } from \"../../Authentication/Styles\"\nimport useApi from \"../../../shared/hooks/api\"\nimport Tabs from \"../../../shared/components/Tabs\"\nimport PhoneVerification from \"./PhoneVertification\"\nimport pubsub from \"sweet-pubsub\"\nimport RecordList from \"./RecordList\"\n\nconst CustomerDetail = () => {\n  const { customerId } = useParams()\n  const [{ isLoading, data, error }, fetchCustomer] = useApi.get(`/customers/${customerId}/`, {}, { mountFetch: true })\n\n  useEffect(() => {\n    pubsub.on('fetch-customer', fetchCustomer)\n    return () => pubsub.off('fetch-customer', fetchCustomer)\n  }, [fetchCustomer])\n\n  if (isLoading) return <PageLoader />\n  if (error) return <PageError />\n\n  return <CustomerContainer>\n    <LeftContainer>\n      <AvatarContainer>\n        <Avatar name={data.full_name} size={150} />\n        <h2 style={{ marginTop: \"25px\" }}>{data.full_name}</h2>\n      </AvatarContainer>\n      <Divider />\n      <div style={{ marginTop: \"25px\" }}>\n        <h3 style={{ fontWeight: \"bold\" }}>Информация</h3>\n        <DL>\n          <dt>Номер телефона</dt>\n          <dd>{data.phone.number}</dd>\n          <dt>Email</dt>\n          <dd>{data.email || \"–\"}</dd>\n          <dt>Дата рождения</dt>\n          <dd>{data.birth_date}</dd>\n          <dt>Откуда узнал?</dt>\n          <dd>{data.find_out?.name || \"–\"}</dd>\n          <dt>Заметка</dt>\n          <dd>{data.note || \"–\"}</dd>\n        </DL>\n      </div>\n    </LeftContainer>\n    <Tabs tabs={[\n      ...!data.phone?.confirmed ? [{\n        label: \"Верификация\", render: <RightContainer>\n          <PhoneVerification phone={data.phone} />\n        </RightContainer>\n      }] : [],\n      { label: \"Сеансы\", render: <RightContainer>\n          <RecordList records={data.records} />\n        </RightContainer> },\n      { label: \"Покупки\", render: <RightContainer>Покупки</RightContainer> },\n      { label: \"Обучения\", render: <RightContainer>Обучения</RightContainer> }\n    ]} />\n  </CustomerContainer>\n}\n\nexport default CustomerDetail\n"],"sourceRoot":""}