{"version":3,"sources":["pages/Home/components/shared.js","shared/utils/string.js","pages/Home/Styles.js","pages/Home/components/Styles.js","pages/Home/components/AbstractCounter.jsx","pages/Home/index.jsx"],"names":["useModalStateHelper","useState","modalShow","setModalShow","useMemo","open","close","isOpen","homeCardsColumns","Header","accessor","width","className","Cell","row","original","created_at","created_by","full_name","formatDateTime","cell","value","name","redirectUrl","useCallback","window","disabled","variant","icon","onClick","capitalize","s","charAt","toUpperCase","slice","RowContainer","styled","div","Row","ColContainer","CardContainer","color","textDarkest","Card","CardHeader","h3","CardBody","h2","CardInfo","HelpIcon","Icon","Container","Title","Body","Entities","pluralName","entities","columns","data","style","textAlign","reduce","acc","next","parseFloat","amount","Counter","apiURL","modalHelpers","profile","useCurrentProfile","useApi","get","id","error","isLoading","fetchData","useEffect","toFixed","testid","onClose","renderContent","type","size","React","memo","balance","isEqual"],"mappings":"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","file":"static/js/6.d03b8ad2.chunk.js","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\"\nimport Button from \"../../../shared/components/Button\"\nimport { formatDateTime } from \"../../../shared/utils/dateTime\"\n\nexport const ButtonCell = ({ cell: { value } }) => {\n  const redirectUrl = useCallback(() => window.open(value), [value])\n  return <Button\n    disabled={!value}\n    variant=\"secondary\"\n    icon=\"link\"\n    onClick={redirectUrl}\n  >\n    Перейти\n  </Button>\n}\n\nexport const CreatedCell = ({row: {original: {created_at, created_by}}}) => {\n  return <div>\n    <p>{created_by.full_name}</p>\n    <p>{formatDateTime(created_at, \"DD.MM.YYYY HH:mm:ss\")}</p>\n  </div>\n}\n\nexport const useModalStateHelper = () => {\n  const [modalShow, setModalShow] = useState(false)\n  return useMemo(() => ({\n    open: () => setModalShow(true),\n    close: () => setModalShow(false),\n    isOpen: () => modalShow === true\n  }), [modalShow])\n}\n\nexport const homeCardsColumns = [\n  {\n    Header: \"ID\",\n    accessor: \"id\",\n    width: 50,\n    className: \"text-center\",\n  },\n  {\n    Header: \"Создание\",\n    accessor: \"created_at\",\n    Cell: CreatedCell,\n    width: 200,\n  },\n  {\n    Header: \"Тип\",\n    accessor: \"type\",\n    Cell: ({ cell }) => cell.value.name,\n    width: 200,\n  },\n  {\n    Header: \"Заметка\",\n    accessor: \"note\",\n  },\n  {\n    Header: \"Сумма\",\n    accessor: \"amount\",\n    className: \"text-right\",\n  },\n  {\n    Header: \"Ссылка\",\n    accessor: \"href\",\n    Cell: ButtonCell,\n    className: \"text-center\",\n  }\n]","export const capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}","import styled from 'styled-components'\n\nexport const RowContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 50px;\n`\n\nexport const Row = styled.div`\n  display: grid;\n  gap: 50px;\n`\n\nexport const ColContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 50px;\n`","import styled from \"styled-components\"\nimport { color } from \"../../../shared/utils/styles\"\nimport { Icon } from \"../../../shared/components\"\n\nexport const CardContainer = styled.div`\n  padding: 10px 25px;\n  border-radius: 5px;\n  color: ${color.textDarkest};\n  background-color: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Card = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`\nexport const CardHeader = styled.h3``\nexport const CardBody = styled.h2``\nexport const CardInfo = styled.div`\n`\n\nexport const HelpIcon = styled(Icon)`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nexport const Container = styled.div`\n  padding: 25px;\n`\nexport const Title = styled.h2``\nexport const Body = styled.div``","import React, { Fragment, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport useApi from \"../../../shared/hooks/api\"\nimport { Body, Card, CardBody, CardContainer, CardHeader, CardInfo, Container, HelpIcon, Title } from \"./Styles\"\nimport { Modal, Table } from \"../../../shared/components\"\nimport { homeCardsColumns, useModalStateHelper } from \"./shared\"\nimport { capitalize } from \"../../../shared/utils/string\"\nimport { useCurrentProfile } from \"../../../shared/hooks/currentUser\"\n\nconst entitiesPropTypes = {\n  pluralName: PropTypes.string.isRequired,\n  entities: PropTypes.array.isRequired\n}\n\nconst Entities = ({ pluralName, entities }) => {\n  return <Container>\n    <Title>{capitalize(pluralName)} за текущий месяц</Title>\n    <Body>\n      <Table columns={homeCardsColumns} data={entities} />\n    </Body>\n    <h4 style={{ textAlign: \"right\" }}>\n      Итого: {entities.reduce((acc, next) => acc + parseFloat(next.amount), 0)}\n    </h4>\n  </Container>\n}\nEntities.propTypes = entitiesPropTypes\n\n\nconst propTypes = {\n  pluralName: PropTypes.string.isRequired,\n  apiURL: PropTypes.string.isRequired\n}\n\nconst Counter = ({ pluralName, apiURL }) => {\n  const modalHelpers = useModalStateHelper()\n  const profile = useCurrentProfile()\n  const [{ data, error, isLoading }, fetchData] = useApi.get(apiURL, { \"employee_id\": profile?.id })\n\n  useEffect(() => {\n    if (profile && profile?.id) {\n      fetchData()\n    }\n  }, [fetchData, profile])\n\n  return <CardContainer>\n    {isLoading\n      ? <Fragment>\n        Loading...\n      </Fragment>\n      : !error\n        ? <Fragment>\n          <Card>\n            <CardHeader>\n              {capitalize(pluralName)}\n            </CardHeader>\n            <CardBody>\n              {data.reduce((acc, next) => acc + parseFloat(next.amount), 0.0).toFixed(2)}\n            </CardBody>\n            {modalHelpers.isOpen() && (\n              <Modal\n                isOpen\n                testid=\"modal:fines\"\n                width={1200}\n                onClose={modalHelpers.close}\n                renderContent={() => (\n                  <Entities pluralName={pluralName} entities={data} />\n                )}\n              />\n            )}\n          </Card>\n          <CardInfo>\n            <HelpIcon type=\"circled-help\" size={20} onClick={modalHelpers.open} />\n          </CardInfo>\n        </Fragment>\n        : <Fragment>\n          Error...\n        </Fragment>\n    }\n  </CardContainer>\n}\n\nCounter.propTypes = propTypes\n\nexport default Counter\n","import React from \"react\"\nimport { isEqual } from \"lodash\"\nimport { ColContainer, Row, RowContainer } from \"./Styles\"\nimport Counter from \"./components/AbstractCounter\"\nimport { Card, CardBody, CardContainer, CardHeader } from \"./components/Styles\"\nimport { useCurrentProfile } from \"../../shared/hooks/currentUser\"\nimport \"react-calendar/dist/Calendar.css\"\n\nconst HomePage = () => {\n  const profile = useCurrentProfile()\n  return <RowContainer>\n    <Row>\n      <ColContainer>\n        <Counter pluralName=\"Премии\" apiURL=\"/bounties/\" />\n        <Counter pluralName=\"Штрафы\" apiURL=\"/fines/\" />\n        <CardContainer>\n          <Card>\n            <CardHeader>Баланс</CardHeader>\n            <CardBody>{profile?.balance || \"0.00\"}</CardBody>\n          </Card>\n        </CardContainer>\n      </ColContainer>\n    </Row>\n  </RowContainer>\n}\n\nexport default React.memo(HomePage, isEqual)"],"sourceRoot":""}