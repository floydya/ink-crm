{"version":3,"sources":["layout/Settings/Styles.js","layout/Settings/Settings.jsx","layout/Settings/ChangePassword.jsx","layout/Settings/index.jsx"],"names":["FormElement","styled","Form","Element","FormHeading","div","font","size","Actions","props","withBottomMargin","color","borderLightest","ActionButton","Button","Row","Settings","modalClose","user","useContext","AuthenticationContext","useApi","patch","id","isUpdating","updateUser","enableReinitialize","initialValues","first_name","middle_name","last_name","phone_number","birth_date","validations","is","required","onSubmit","values","form","a","oldValues","isEqual","toast","success","pubsub","emit","handleAPIError","Field","Input","name","label","type","variant","isWorking","ChangePassword","dispatch","changePassword","old_password","new_password","repeat_new_password","logoutUser","SettingsModal"],"mappings":"4jCAKO,IAAMA,EAAcC,YAAOC,IAAKC,QAAZF,CAAH,KAIXG,EAAcH,IAAOI,IAAV,IAEpBC,IAAKC,KAAK,KAmBDC,GAhBaP,IAAOI,IAAV,KAInB,SAAAI,GAAK,OAAIA,EAAMC,kBAAN,yBAGkBT,IAAOI,IAAV,KAILJ,IAAOI,IAAV,IAEMM,IAAMC,gBAGTX,IAAOI,IAAV,MAMPQ,EAAeZ,YAAOa,IAAPb,CAAH,KAIZc,EAAMd,IAAOI,IAAV,K,kFCgDDW,EA1EE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACVC,EAASC,qBAAWC,KAApBF,KAD2B,EAEEG,IAAOC,MAAP,wBAAuBJ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMK,GAA7B,MAFF,mBAE1BC,EAF0B,KAE1BA,WAAcC,EAFY,KAInC,OAAO,kBAAC,IAAD,CACLC,oBAAkB,EAClBC,cAAe,CACbC,WAAU,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMU,WAClBC,YAAW,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAMW,YACnBC,UAAS,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAMY,UACjBC,aAAY,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAMa,aACpBC,WAAU,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAMc,YAEpBC,YAAa,CACXL,WAAY1B,IAAKgC,GAAGC,WACpBN,YAAa3B,IAAKgC,GAAGC,WACrBL,UAAW5B,IAAKgC,GAAGC,WACnBJ,aAAc7B,IAAKgC,GAAGC,WACtBH,WAAY9B,IAAKgC,GAAGC,YAEtBC,SAAQ,uCAAE,WAAOC,EAAQC,GAAf,yBAAAC,EAAA,yDACAX,EAAiEV,EAAjEU,WAAYC,EAAqDX,EAArDW,YAAaC,EAAwCZ,EAAxCY,UAAWC,EAA6Bb,EAA7Ba,aAAcC,EAAed,EAAfc,WACpDQ,EAAY,CAAEZ,aAAYC,cAAaC,YAAWC,eAAcC,cACjES,kBAAQJ,EAAQG,GAHb,0CAKEf,EAAWY,GALb,OAMJK,IAAMC,QAAQ,yKACdC,IAAOC,KAAK,cACZ5B,IARI,kDAUJf,IAAK4C,eAAL,KAA2BR,GAVvB,gCAaNrB,IAbM,0DAAF,yDAiBR,kBAACjB,EAAD,KACE,kBAACI,EAAD,+DACA,kBAAC,IAAK2C,MAAMC,MAAZ,CACEC,KAAK,aACLC,MAAM,uBAER,kBAAC,IAAKH,MAAMC,MAAZ,CACEC,KAAK,cACLC,MAAM,2DAER,kBAAC,IAAKH,MAAMC,MAAZ,CACEC,KAAK,YACLC,MAAM,+CAER,kBAAC,IAAKH,MAAMC,MAAZ,CACEC,KAAK,aACLC,MAAM,4EACNC,KAAK,SAEP,kBAAC,IAAKJ,MAAMC,MAAZ,CACEC,KAAK,eACLC,MAAM,oFAER,kBAAC1C,EAAD,KACE,kBAACK,EAAD,CAAcsC,KAAK,SAASC,QAAQ,UAAUC,UAAW7B,GAAzD,wD,SCPO8B,EAvDQ,SAAC,GAAoB,IAAlBrC,EAAiB,EAAjBA,WAChBsC,EAAapC,qBAAWC,KAAxBmC,SADiC,EAEAlC,IAAOC,MAAP,0BAFA,mBAEhCE,EAFgC,KAEhCA,WAAcgC,EAFkB,KAIzC,OAAO,kBAAC,IAAD,CACL9B,oBAAkB,EAClBC,cAAe,CACb8B,aAAc,GACdC,aAAc,GACdC,oBAAqB,IAEvB1B,YAAa,CACXwB,aAAcvD,IAAKgC,GAAGC,WACtBuB,aAAcxD,IAAKgC,GAAGC,WACtBwB,oBAAqBzD,IAAKgC,GAAGC,YAE/BC,SAAQ,uCAAE,WAAOC,EAAQC,GAAf,SAAAC,EAAA,+EAEAiB,EAAenB,GAFf,OAGNK,IAAMC,QAAQ,+HACdY,EAASK,eACT3C,IALM,gDAONf,IAAK4C,eAAL,KAA2BR,GAPrB,yDAAF,yDAWR,kBAACtC,EAAD,KACE,kBAACI,EAAD,oGACA,kBAAC,IAAK2C,MAAMC,MAAZ,CACEC,KAAK,eACLE,KAAK,WACLD,MAAM,8EAER,kBAAC,IAAKH,MAAMC,MAAZ,CACEC,KAAK,eACLE,KAAK,WACLD,MAAM,wEAER,kBAAC,IAAKH,MAAMC,MAAZ,CACEC,KAAK,sBACLE,KAAK,WACLD,MAAM,+HAER,kBAAC1C,EAAD,KACE,kBAACK,EAAD,CAAcsC,KAAK,SAASC,QAAQ,UAAUC,UAAW7B,GAAzD,wDCvCOqC,UATO,SAAC,GAAoB,IAAlB5C,EAAiB,EAAjBA,WACvB,OAAO,kBAACF,EAAD,KACL,kBAAC,EAAD,CAAUE,WAAYA,IACtB,kBAAC,EAAD,CAAgBA,WAAYA","file":"static/js/15.f04970b7.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nimport { color, font } from '../../shared/utils/styles';\nimport { Button, Form } from '../../shared/components';\n\nexport const FormElement = styled(Form.Element)`\n  padding: 25px 40px 35px;\n`;\n\nexport const FormHeading = styled.div`\n  padding-bottom: 15px;\n  ${font.size(21)}\n`;\n\nexport const SelectItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 15px;\n  ${props => props.withBottomMargin && `margin-bottom: 5px;`}\n`;\n\nexport const SelectItemLabel = styled.div`\n  padding: 0 3px 0 6px;\n`;\n\nexport const Divider = styled.div`\n  margin-top: 22px;\n  border-top: 1px solid ${color.borderLightest};\n`;\n\nexport const Actions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 30px;\n`;\n\nexport const ActionButton = styled(Button)`\n  margin-left: 10px;\n`;\n\nexport const Row = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 2fr;\n`","import React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Form } from \"../../shared/components\"\nimport useApi from \"../../shared/hooks/api\"\nimport toast from \"../../shared/utils/toast\"\nimport { ActionButton, Actions, FormElement, FormHeading } from \"./Styles\"\nimport { isEqual } from \"lodash\"\nimport pubsub from \"sweet-pubsub\"\nimport { AuthenticationContext } from \"../../services/authentication.service\"\n\nconst propTypes = {\n  modalClose: PropTypes.func.isRequired\n}\n\nconst Settings = ({ modalClose }) => {\n  const { user } = useContext(AuthenticationContext)\n  const [{ isUpdating }, updateUser] = useApi.patch(`/users/${user?.id}/`)\n\n  return <Form\n    enableReinitialize\n    initialValues={{\n      first_name: user?.first_name,\n      middle_name: user?.middle_name,\n      last_name: user?.last_name,\n      phone_number: user?.phone_number,\n      birth_date: user?.birth_date\n    }}\n    validations={{\n      first_name: Form.is.required(),\n      middle_name: Form.is.required(),\n      last_name: Form.is.required(),\n      phone_number: Form.is.required(),\n      birth_date: Form.is.required()\n    }}\n    onSubmit={async (values, form) => {\n      const { first_name, middle_name, last_name, phone_number, birth_date } = user\n      const oldValues = { first_name, middle_name, last_name, phone_number, birth_date }\n      if (!isEqual(values, oldValues)) {\n        try {\n          await updateUser(values)\n          toast.success(\"Пользователь успешно обновлен.\")\n          pubsub.emit(\"fetch-user\")\n          modalClose()\n        } catch (error) {\n          Form.handleAPIError(error, form)\n        }\n      } else {\n        modalClose()\n      }\n    }}\n  >\n    <FormElement>\n      <FormHeading>Настройки</FormHeading>\n      <Form.Field.Input\n        name=\"first_name\"\n        label=\"Имя\"\n      />\n      <Form.Field.Input\n        name=\"middle_name\"\n        label=\"Отчетство\"\n      />\n      <Form.Field.Input\n        name=\"last_name\"\n        label=\"Фамилия\"\n      />\n      <Form.Field.Input\n        name=\"birth_date\"\n        label=\"Дата рождения\"\n        type=\"date\"\n      />\n      <Form.Field.Input\n        name=\"phone_number\"\n        label=\"Номер телефона\"\n      />\n      <Actions>\n        <ActionButton type=\"submit\" variant=\"primary\" isWorking={isUpdating}>\n          Обновить\n        </ActionButton>\n        {/*<ActionButton type=\"button\" variant=\"empty\" onClick={modalClose}>*/}\n        {/*  Отменить*/}\n        {/*</ActionButton>*/}\n      </Actions>\n    </FormElement>\n  </Form>\n}\n\nSettings.propTypes = propTypes\n\nexport default Settings\n","import React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { AuthenticationContext } from \"../../services/authentication.service\"\nimport useApi from \"../../shared/hooks/api\"\nimport { Form } from \"../../shared/components\"\nimport toast from \"../../shared/utils/toast\"\nimport { ActionButton, Actions, FormElement, FormHeading } from \"./Styles\"\nimport { logoutUser } from \"../../store/actions/authentication.actions\"\n\nconst propTypes = {\n  modalClose: PropTypes.func.isRequired\n}\n\nconst ChangePassword = ({ modalClose }) => {\n  const { dispatch } = useContext(AuthenticationContext)\n  const [{ isUpdating }, changePassword] = useApi.patch(`/auth/change-password/`)\n\n  return <Form\n    enableReinitialize\n    initialValues={{\n      old_password: \"\",\n      new_password: \"\",\n      repeat_new_password: \"\"\n    }}\n    validations={{\n      old_password: Form.is.required(),\n      new_password: Form.is.required(),\n      repeat_new_password: Form.is.required()\n    }}\n    onSubmit={async (values, form) => {\n      try {\n        await changePassword(values)\n        toast.success(\"Пароль успешно изменен.\")\n        dispatch(logoutUser())\n        modalClose()\n      } catch (error) {\n        Form.handleAPIError(error, form)\n      }\n    }}\n  >\n    <FormElement>\n      <FormHeading>Изменение пароля</FormHeading>\n      <Form.Field.Input\n        name=\"old_password\"\n        type=\"password\"\n        label=\"Старый пароль\"\n      />\n      <Form.Field.Input\n        name=\"new_password\"\n        type=\"password\"\n        label=\"Новый пароль\"\n      />\n      <Form.Field.Input\n        name=\"repeat_new_password\"\n        type=\"password\"\n        label=\"Повторите новый пароль\"\n      />\n      <Actions>\n        <ActionButton type=\"submit\" variant=\"primary\" isWorking={isUpdating}>\n          Изменить\n        </ActionButton>\n      </Actions>\n    </FormElement>\n  </Form>\n}\n\nChangePassword.propTypes = propTypes\n\nexport default ChangePassword\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Row } from \"./Styles\"\nimport Settings from \"./Settings\"\nimport ChangePassword from \"./ChangePassword\"\n\nconst propTypes = {\n  modalClose: PropTypes.func.isRequired\n}\n\nconst SettingsModal = ({ modalClose }) => {\n  return <Row>\n    <Settings modalClose={modalClose} />\n    <ChangePassword modalClose={modalClose} />\n  </Row>\n}\n\nSettingsModal.propTypes = propTypes\n\nexport default SettingsModal\n"],"sourceRoot":""}